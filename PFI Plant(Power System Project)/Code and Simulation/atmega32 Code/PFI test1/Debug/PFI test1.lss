
PFI test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000184c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000050  00800060  0000184c  000018e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000398  008000b0  008000b0  00001930  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001930  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  00001960  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000eba  00000000  00000000  00001a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004a3  00000000  00000000  0000292a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000060c  00000000  00000000  00002dcd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000368  00000000  00000000  000033dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000051f  00000000  00000000  00003744  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000670  00000000  00000000  00003c63  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  000042d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__vector_1>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__vector_9>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 e0 06 	jmp	0xdc0	; 0xdc0 <__vector_13>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__zero_reg__+0x3b>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <calculate_power_factor+0x41e>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <calculate_power_factor+0x150>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <__vector_1+0xa>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	ec e4       	ldi	r30, 0x4C	; 76
     162:	f8 e1       	ldi	r31, 0x18	; 24
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	a0 3b       	cpi	r26, 0xB0	; 176
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	24 e0       	ldi	r18, 0x04	; 4
     172:	a0 eb       	ldi	r26, 0xB0	; 176
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a8 34       	cpi	r26, 0x48	; 72
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 b4 06 	call	0xd68	; 0xd68 <main>
     184:	0c 94 24 0c 	jmp	0x1848	; 0x1848 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <ADC_Initialize>:
#include "ADC_single_conversion.h"


void ADC_Initialize()
{
	ADCSRA |= 1<<ADEN; //ADC enable. ADC doesn't consume power when ADEN is cleared
     18c:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |=(1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2); // prescaler=128 means X_cpu/128=7.8125KHz
     18e:	86 b1       	in	r24, 0x06	; 6
     190:	87 60       	ori	r24, 0x07	; 7
     192:	86 b9       	out	0x06, r24	; 6
	ADMUX |= 1<<REFS0; //Reference: AVCC (AVCC must be connected with VCC)
     194:	3e 9a       	sbi	0x07, 6	; 7
     196:	08 95       	ret

00000198 <ADC_Read>:

unsigned int ADC_Read(uint8_t channel)
{
	int adc_value = 0;
	//ADMUX |= (ADMUX&0b11100000)|(channel&0b00011111); // First five bits of ADMUX for selecting channel
	ADMUX = (ADMUX&0xf0)|(channel&0x0f);
     198:	97 b1       	in	r25, 0x07	; 7
     19a:	8f 70       	andi	r24, 0x0F	; 15
     19c:	90 7f       	andi	r25, 0xF0	; 240
     19e:	98 2b       	or	r25, r24
     1a0:	97 b9       	out	0x07, r25	; 7
	ADCSRA |=1<<ADSC; //Conversion will start writing this bit to one.
     1a2:	36 9a       	sbi	0x06, 6	; 6
	while(!(ADCSRA&(1<<ADIF))); //ADIF will set when conversion complete and loop breaks.
     1a4:	34 9b       	sbis	0x06, 4	; 6
     1a6:	fe cf       	rjmp	.-4      	; 0x1a4 <ADC_Read+0xc>
	ADCSRA|= 1<<ADIF; //ADIF must be cleared(1) to trigger a new conversion next time
     1a8:	34 9a       	sbi	0x06, 4	; 6
	adc_value = ADCW;
     1aa:	84 b1       	in	r24, 0x04	; 4
     1ac:	95 b1       	in	r25, 0x05	; 5
	return(adc_value);
	
     1ae:	08 95       	ret

000001b0 <__vector_1>:
		USARTInit(25);
		DDRB |=1<<PB0;
		_delay_ms(10);
}
ISR(INT0_vect)
{
     1b0:	1f 92       	push	r1
     1b2:	0f 92       	push	r0
     1b4:	0f b6       	in	r0, 0x3f	; 63
     1b6:	0f 92       	push	r0
     1b8:	11 24       	eor	r1, r1
	
	//PORTB ^=1<<PB0;
}
     1ba:	0f 90       	pop	r0
     1bc:	0f be       	out	0x3f, r0	; 63
     1be:	0f 90       	pop	r0
     1c0:	1f 90       	pop	r1
     1c2:	18 95       	reti

000001c4 <__vector_9>:

ISR(TIMER1_OVF_vect)
{
     1c4:	1f 92       	push	r1
     1c6:	0f 92       	push	r0
     1c8:	0f b6       	in	r0, 0x3f	; 63
     1ca:	0f 92       	push	r0
     1cc:	11 24       	eor	r1, r1
     1ce:	8f 93       	push	r24
     1d0:	9f 93       	push	r25
	
		PORTB ^=1<<PB0;
     1d2:	98 b3       	in	r25, 0x18	; 24
     1d4:	81 e0       	ldi	r24, 0x01	; 1
     1d6:	89 27       	eor	r24, r25
     1d8:	88 bb       	out	0x18, r24	; 24

}
     1da:	9f 91       	pop	r25
     1dc:	8f 91       	pop	r24
     1de:	0f 90       	pop	r0
     1e0:	0f be       	out	0x3f, r0	; 63
     1e2:	0f 90       	pop	r0
     1e4:	1f 90       	pop	r1
     1e6:	18 95       	reti

000001e8 <voltage_current_read>:


void voltage_current_read()
{
     1e8:	cf 93       	push	r28
     1ea:	df 93       	push	r29
	
	for (i=0;i<number_of_samples;i++)
     1ec:	10 92 e1 00 	sts	0x00E1, r1
     1f0:	c0 e0       	ldi	r28, 0x00	; 0
	{
		voltage_adc[i]=ADC_Read(volt_pin);
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	0e 94 cc 00 	call	0x198	; 0x198 <ADC_Read>
     1f8:	ec 2f       	mov	r30, r28
     1fa:	f0 e0       	ldi	r31, 0x00	; 0
     1fc:	ee 0f       	add	r30, r30
     1fe:	ff 1f       	adc	r31, r31
     200:	ea 58       	subi	r30, 0x8A	; 138
     202:	fd 4f       	sbci	r31, 0xFD	; 253
     204:	91 83       	std	Z+1, r25	; 0x01
     206:	80 83       	st	Z, r24
		//_delay_us(700);;
		current_adc[i]= ADC_Read(current_pin);
     208:	c0 91 e1 00 	lds	r28, 0x00E1
     20c:	d0 e0       	ldi	r29, 0x00	; 0
     20e:	81 e0       	ldi	r24, 0x01	; 1
     210:	0e 94 cc 00 	call	0x198	; 0x198 <ADC_Read>
     214:	cc 0f       	add	r28, r28
     216:	dd 1f       	adc	r29, r29
     218:	ca 51       	subi	r28, 0x1A	; 26
     21a:	df 4f       	sbci	r29, 0xFF	; 255
     21c:	99 83       	std	Y+1, r25	; 0x01
     21e:	88 83       	st	Y, r24


void voltage_current_read()
{
	
	for (i=0;i<number_of_samples;i++)
     220:	e0 91 e1 00 	lds	r30, 0x00E1
     224:	ef 5f       	subi	r30, 0xFF	; 255
     226:	e0 93 e1 00 	sts	0x00E1, r30
     22a:	e8 3c       	cpi	r30, 0xC8	; 200
     22c:	10 f4       	brcc	.+4      	; 0x232 <voltage_current_read+0x4a>
     22e:	ce 2f       	mov	r28, r30
     230:	e0 cf       	rjmp	.-64     	; 0x1f2 <voltage_current_read+0xa>
		voltage_adc[i]=ADC_Read(volt_pin);
		//_delay_us(700);;
		current_adc[i]= ADC_Read(current_pin);
		//_delay_us(700);
	}
}
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	08 95       	ret

00000238 <Init_timer1_normal_mode_with_overflow>:
	}
}

Init_timer1_normal_mode_with_overflow()
{
	TCCR1B |=(1<<CS10)|(1<<CS11); //timer 1 is activated with prescaler 64
     238:	8e b5       	in	r24, 0x2e	; 46
     23a:	83 60       	ori	r24, 0x03	; 3
     23c:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= 1<<TOIE1; //Overflow interrupt enalbe, so when timer reaches its maximum value, it overflows and overflow interrupt vector routine will be executed
     23e:	89 b7       	in	r24, 0x39	; 57
     240:	84 60       	ori	r24, 0x04	; 4
     242:	89 bf       	out	0x39, r24	; 57
	sei(); // enable global interrupt
     244:	78 94       	sei
}
     246:	08 95       	ret

00000248 <Initialize_INT0>:
Initialize_INT0()
{
	sei(); //enable global interrupt
     248:	78 94       	sei
	GICR |=1<<INT0;  //External interrupt on INT0 pin is enabled
     24a:	8b b7       	in	r24, 0x3b	; 59
     24c:	80 64       	ori	r24, 0x40	; 64
     24e:	8b bf       	out	0x3b, r24	; 59
	//MCUCR &= (~(1<<ISC00))&(~(1<<ISC01)); //the low level on INTo generates an interrupt
	MCUCR |= 1<<ISC00; //any logic change on INT0 pin generates an interrupt request
     250:	85 b7       	in	r24, 0x35	; 53
     252:	81 60       	ori	r24, 0x01	; 1
     254:	85 bf       	out	0x35, r24	; 53
	//MCUCR |=1<<ISC01; //The falling edge(high to low) of INT0 generates an interrupt request.
}
     256:	08 95       	ret

00000258 <setup>:
    }
}

void setup()
{
		Initialize_INT0();
     258:	0e 94 24 01 	call	0x248	; 0x248 <Initialize_INT0>
		ADC_Initialize();
     25c:	0e 94 c6 00 	call	0x18c	; 0x18c <ADC_Initialize>
		Init_timer1_normal_mode_with_overflow();
     260:	0e 94 1c 01 	call	0x238	; 0x238 <Init_timer1_normal_mode_with_overflow>
		USARTInit(25);
     264:	89 e1       	ldi	r24, 0x19	; 25
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	0e 94 d3 06 	call	0xda6	; 0xda6 <USARTInit>
		DDRB |=1<<PB0;
     26c:	b8 9a       	sbi	0x17, 0	; 23
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     26e:	83 ec       	ldi	r24, 0xC3	; 195
     270:	99 e0       	ldi	r25, 0x09	; 9
     272:	01 97       	sbiw	r24, 0x01	; 1
     274:	f1 f7       	brne	.-4      	; 0x272 <setup+0x1a>
     276:	00 c0       	rjmp	.+0      	; 0x278 <setup+0x20>
     278:	00 00       	nop
     27a:	08 95       	ret

0000027c <calculate_power_factor>:
		return(0);
	}
}

void calculate_power_factor()
{
     27c:	2f 92       	push	r2
     27e:	3f 92       	push	r3
     280:	4f 92       	push	r4
     282:	5f 92       	push	r5
     284:	6f 92       	push	r6
     286:	7f 92       	push	r7
     288:	8f 92       	push	r8
     28a:	9f 92       	push	r9
     28c:	af 92       	push	r10
     28e:	bf 92       	push	r11
     290:	cf 92       	push	r12
     292:	df 92       	push	r13
     294:	ef 92       	push	r14
     296:	ff 92       	push	r15
     298:	0f 93       	push	r16
     29a:	1f 93       	push	r17
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	cd b7       	in	r28, 0x3d	; 61
     2a2:	de b7       	in	r29, 0x3e	; 62
     2a4:	62 97       	sbiw	r28, 0x12	; 18
     2a6:	0f b6       	in	r0, 0x3f	; 63
     2a8:	f8 94       	cli
     2aa:	de bf       	out	0x3e, r29	; 62
     2ac:	0f be       	out	0x3f, r0	; 63
     2ae:	cd bf       	out	0x3d, r28	; 61
	voltage_current_read();
     2b0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <voltage_current_read>
	ADCSRA &= ~(1<<ADEN);
     2b4:	37 98       	cbi	0x06, 7	; 6
     2b6:	80 90 d8 00 	lds	r8, 0x00D8
     2ba:	90 90 d9 00 	lds	r9, 0x00D9
     2be:	a0 90 da 00 	lds	r10, 0x00DA
     2c2:	b0 90 db 00 	lds	r11, 0x00DB
     2c6:	c0 90 d4 00 	lds	r12, 0x00D4
     2ca:	d0 90 d5 00 	lds	r13, 0x00D5
     2ce:	e0 90 d6 00 	lds	r14, 0x00D6
     2d2:	f0 90 d7 00 	lds	r15, 0x00D7
     2d6:	0f 2e       	mov	r0, r31
     2d8:	f6 e0       	ldi	r31, 0x06	; 6
     2da:	2f 2e       	mov	r2, r31
     2dc:	f4 e0       	ldi	r31, 0x04	; 4
     2de:	3f 2e       	mov	r3, r31
     2e0:	f0 2d       	mov	r31, r0
     2e2:	06 ee       	ldi	r16, 0xE6	; 230
     2e4:	10 e0       	ldi	r17, 0x00	; 0
     2e6:	0f 2e       	mov	r0, r31
     2e8:	f6 e7       	ldi	r31, 0x76	; 118
     2ea:	6f 2e       	mov	r6, r31
     2ec:	f2 e0       	ldi	r31, 0x02	; 2
     2ee:	7f 2e       	mov	r7, r31
     2f0:	f0 2d       	mov	r31, r0
	//print_voltage_current();
	//Average voltage and current calculation
	for (n=0;n<number_of_samples;n++)
	{
		average_volt += (5.00*voltage_adc[n])/1024.00;
     2f2:	d3 01       	movw	r26, r6
     2f4:	6d 91       	ld	r22, X+
     2f6:	7d 91       	ld	r23, X+
     2f8:	3d 01       	movw	r6, r26
     2fa:	88 27       	eor	r24, r24
     2fc:	77 fd       	sbrc	r23, 7
     2fe:	80 95       	com	r24
     300:	98 2f       	mov	r25, r24
     302:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     306:	20 e0       	ldi	r18, 0x00	; 0
     308:	30 e0       	ldi	r19, 0x00	; 0
     30a:	40 ea       	ldi	r20, 0xA0	; 160
     30c:	50 e4       	ldi	r21, 0x40	; 64
     30e:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     312:	20 e0       	ldi	r18, 0x00	; 0
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	40 e8       	ldi	r20, 0x80	; 128
     318:	5a e3       	ldi	r21, 0x3A	; 58
     31a:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     31e:	28 2d       	mov	r18, r8
     320:	39 2d       	mov	r19, r9
     322:	4a 2d       	mov	r20, r10
     324:	5b 2d       	mov	r21, r11
     326:	0e 94 6d 07 	call	0xeda	; 0xeda <__addsf3>
     32a:	86 2e       	mov	r8, r22
     32c:	97 2e       	mov	r9, r23
     32e:	a8 2e       	mov	r10, r24
     330:	b9 2e       	mov	r11, r25
		average_current += (5.00*current_adc[n])/1024.00;
     332:	f8 01       	movw	r30, r16
     334:	61 91       	ld	r22, Z+
     336:	71 91       	ld	r23, Z+
     338:	8f 01       	movw	r16, r30
     33a:	88 27       	eor	r24, r24
     33c:	77 fd       	sbrc	r23, 7
     33e:	80 95       	com	r24
     340:	98 2f       	mov	r25, r24
     342:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     346:	20 e0       	ldi	r18, 0x00	; 0
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	40 ea       	ldi	r20, 0xA0	; 160
     34c:	50 e4       	ldi	r21, 0x40	; 64
     34e:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	40 e8       	ldi	r20, 0x80	; 128
     358:	5a e3       	ldi	r21, 0x3A	; 58
     35a:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     35e:	2c 2d       	mov	r18, r12
     360:	3d 2d       	mov	r19, r13
     362:	4e 2d       	mov	r20, r14
     364:	5f 2d       	mov	r21, r15
     366:	0e 94 6d 07 	call	0xeda	; 0xeda <__addsf3>
{
	voltage_current_read();
	ADCSRA &= ~(1<<ADEN);
	//print_voltage_current();
	//Average voltage and current calculation
	for (n=0;n<number_of_samples;n++)
     36a:	62 14       	cp	r6, r2
     36c:	73 04       	cpc	r7, r3
     36e:	29 f0       	breq	.+10     	; 0x37a <calculate_power_factor+0xfe>
	{
		average_volt += (5.00*voltage_adc[n])/1024.00;
		average_current += (5.00*current_adc[n])/1024.00;
     370:	c6 2e       	mov	r12, r22
     372:	d7 2e       	mov	r13, r23
     374:	e8 2e       	mov	r14, r24
     376:	f9 2e       	mov	r15, r25
     378:	bc cf       	rjmp	.-136    	; 0x2f2 <calculate_power_factor+0x76>
     37a:	c6 2e       	mov	r12, r22
     37c:	d7 2e       	mov	r13, r23
     37e:	e8 2e       	mov	r14, r24
     380:	f9 2e       	mov	r15, r25
		
	}
	average_volt = average_volt/number_of_samples;
     382:	20 e0       	ldi	r18, 0x00	; 0
     384:	30 e0       	ldi	r19, 0x00	; 0
     386:	48 e4       	ldi	r20, 0x48	; 72
     388:	53 e4       	ldi	r21, 0x43	; 67
     38a:	68 2d       	mov	r22, r8
     38c:	79 2d       	mov	r23, r9
     38e:	8a 2d       	mov	r24, r10
     390:	9b 2d       	mov	r25, r11
     392:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__divsf3>
     396:	6d 87       	std	Y+13, r22	; 0x0d
     398:	7e 87       	std	Y+14, r23	; 0x0e
     39a:	8f 87       	std	Y+15, r24	; 0x0f
     39c:	98 8b       	std	Y+16, r25	; 0x10
     39e:	60 93 d8 00 	sts	0x00D8, r22
     3a2:	70 93 d9 00 	sts	0x00D9, r23
     3a6:	80 93 da 00 	sts	0x00DA, r24
     3aa:	90 93 db 00 	sts	0x00DB, r25
	average_current = average_current/number_of_samples;
     3ae:	20 e0       	ldi	r18, 0x00	; 0
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	48 e4       	ldi	r20, 0x48	; 72
     3b4:	53 e4       	ldi	r21, 0x43	; 67
     3b6:	6c 2d       	mov	r22, r12
     3b8:	7d 2d       	mov	r23, r13
     3ba:	8e 2d       	mov	r24, r14
     3bc:	9f 2d       	mov	r25, r15
     3be:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__divsf3>
     3c2:	69 87       	std	Y+9, r22	; 0x09
     3c4:	7a 87       	std	Y+10, r23	; 0x0a
     3c6:	8b 87       	std	Y+11, r24	; 0x0b
     3c8:	9c 87       	std	Y+12, r25	; 0x0c
     3ca:	60 93 d4 00 	sts	0x00D4, r22
     3ce:	70 93 d5 00 	sts	0x00D5, r23
     3d2:	80 93 d6 00 	sts	0x00D6, r24
     3d6:	90 93 d7 00 	sts	0x00D7, r25
	//UWriteString(" \n Average current = ");
	//print_double(average_current,4,3);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
//	UWriteString(" \n Actual voltage \n");
	volt_square_sum = 0;
	current_squared_sum=0;
     3da:	10 92 b4 00 	sts	0x00B4, r1
     3de:	10 92 b5 00 	sts	0x00B5, r1
     3e2:	10 92 b6 00 	sts	0x00B6, r1
     3e6:	10 92 b7 00 	sts	0x00B7, r1
     3ea:	81 2c       	mov	r8, r1
     3ec:	91 2c       	mov	r9, r1
     3ee:	a1 2c       	mov	r10, r1
     3f0:	06 e7       	ldi	r16, 0x76	; 118
     3f2:	12 e0       	ldi	r17, 0x02	; 2
     3f4:	71 2c       	mov	r7, r1
     3f6:	61 2c       	mov	r6, r1
     3f8:	51 2c       	mov	r5, r1
     3fa:	41 2c       	mov	r4, r1
     3fc:	1a 8b       	std	Y+18, r17	; 0x12
     3fe:	09 8b       	std	Y+17, r16	; 0x11
     400:	8d 82       	std	Y+5, r8	; 0x05
     402:	19 2d       	mov	r17, r9
     404:	0a 2d       	mov	r16, r10
     406:	49 82       	std	Y+1, r4	; 0x01
     408:	8d 84       	ldd	r8, Y+13	; 0x0d
     40a:	9e 84       	ldd	r9, Y+14	; 0x0e
     40c:	af 84       	ldd	r10, Y+15	; 0x0f
     40e:	b8 88       	ldd	r11, Y+16	; 0x10
	V_avg=0;
	for (n=0;n<number_of_samples;n++)
	{
		actual_volt = ((5.00*voltage_adc[n])/1024.00)-average_volt;
     410:	a9 89       	ldd	r26, Y+17	; 0x11
     412:	ba 89       	ldd	r27, Y+18	; 0x12
     414:	6d 91       	ld	r22, X+
     416:	7d 91       	ld	r23, X+
     418:	ba 8b       	std	Y+18, r27	; 0x12
     41a:	a9 8b       	std	Y+17, r26	; 0x11
     41c:	88 27       	eor	r24, r24
     41e:	77 fd       	sbrc	r23, 7
     420:	80 95       	com	r24
     422:	98 2f       	mov	r25, r24
     424:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     428:	20 e0       	ldi	r18, 0x00	; 0
     42a:	30 e0       	ldi	r19, 0x00	; 0
     42c:	40 ea       	ldi	r20, 0xA0	; 160
     42e:	50 e4       	ldi	r21, 0x40	; 64
     430:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     434:	20 e0       	ldi	r18, 0x00	; 0
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	40 e8       	ldi	r20, 0x80	; 128
     43a:	5a e3       	ldi	r21, 0x3A	; 58
     43c:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     440:	a5 01       	movw	r20, r10
     442:	94 01       	movw	r18, r8
     444:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     448:	6b 01       	movw	r12, r22
     44a:	7c 01       	movw	r14, r24
		V_avg = V_avg+actual_volt;
     44c:	26 2d       	mov	r18, r6
     44e:	35 2d       	mov	r19, r5
     450:	44 2d       	mov	r20, r4
     452:	59 81       	ldd	r21, Y+1	; 0x01
     454:	0e 94 6d 07 	call	0xeda	; 0xeda <__addsf3>
     458:	66 2e       	mov	r6, r22
     45a:	57 2e       	mov	r5, r23
     45c:	48 2e       	mov	r4, r24
     45e:	99 83       	std	Y+1, r25	; 0x01
		volt_square_sum = volt_square_sum+pow(actual_volt,2);
     460:	a7 01       	movw	r20, r14
     462:	96 01       	movw	r18, r12
     464:	c7 01       	movw	r24, r14
     466:	b6 01       	movw	r22, r12
     468:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     46c:	9b 01       	movw	r18, r22
     46e:	ac 01       	movw	r20, r24
     470:	6d 81       	ldd	r22, Y+5	; 0x05
     472:	71 2f       	mov	r23, r17
     474:	80 2f       	mov	r24, r16
     476:	97 2d       	mov	r25, r7
     478:	0e 94 6d 07 	call	0xeda	; 0xeda <__addsf3>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
//	UWriteString(" \n Actual voltage \n");
	volt_square_sum = 0;
	current_squared_sum=0;
	V_avg=0;
	for (n=0;n<number_of_samples;n++)
     47c:	e9 89       	ldd	r30, Y+17	; 0x11
     47e:	fa 89       	ldd	r31, Y+18	; 0x12
     480:	2e 16       	cp	r2, r30
     482:	3f 06       	cpc	r3, r31
     484:	29 f0       	breq	.+10     	; 0x490 <calculate_power_factor+0x214>
	{
		actual_volt = ((5.00*voltage_adc[n])/1024.00)-average_volt;
		V_avg = V_avg+actual_volt;
		volt_square_sum = volt_square_sum+pow(actual_volt,2);
     486:	6d 83       	std	Y+5, r22	; 0x05
     488:	17 2f       	mov	r17, r23
     48a:	08 2f       	mov	r16, r24
     48c:	79 2e       	mov	r7, r25
     48e:	c0 cf       	rjmp	.-128    	; 0x410 <calculate_power_factor+0x194>
     490:	76 2c       	mov	r7, r6
     492:	65 2c       	mov	r6, r5
     494:	54 2c       	mov	r5, r4
     496:	49 80       	ldd	r4, Y+1	; 0x01
     498:	07 2d       	mov	r16, r7
     49a:	16 2d       	mov	r17, r6
     49c:	25 2d       	mov	r18, r5
     49e:	34 2d       	mov	r19, r4
     4a0:	00 93 c0 00 	sts	0x00C0, r16
     4a4:	10 93 c1 00 	sts	0x00C1, r17
     4a8:	20 93 c2 00 	sts	0x00C2, r18
     4ac:	30 93 c3 00 	sts	0x00C3, r19
     4b0:	06 2f       	mov	r16, r22
     4b2:	17 2f       	mov	r17, r23
     4b4:	28 2f       	mov	r18, r24
     4b6:	39 2f       	mov	r19, r25
     4b8:	00 93 b8 00 	sts	0x00B8, r16
     4bc:	10 93 b9 00 	sts	0x00B9, r17
     4c0:	20 93 ba 00 	sts	0x00BA, r18
     4c4:	30 93 bb 00 	sts	0x00BB, r19
     4c8:	e0 90 b4 00 	lds	r14, 0x00B4
     4cc:	f0 90 b5 00 	lds	r15, 0x00B5
     4d0:	60 90 b6 00 	lds	r6, 0x00B6
     4d4:	70 90 b7 00 	lds	r7, 0x00B7
     4d8:	0f 2e       	mov	r0, r31
     4da:	f6 e7       	ldi	r31, 0x76	; 118
     4dc:	8f 2e       	mov	r8, r31
     4de:	f2 e0       	ldi	r31, 0x02	; 2
     4e0:	9f 2e       	mov	r9, r31
     4e2:	f0 2d       	mov	r31, r0
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
//	UWriteString(" \n Actual voltage \n");
	volt_square_sum = 0;
	current_squared_sum=0;
	V_avg=0;
	for (n=0;n<number_of_samples;n++)
     4e4:	06 ee       	ldi	r16, 0xE6	; 230
     4e6:	10 e0       	ldi	r17, 0x00	; 0
     4e8:	b1 2c       	mov	r11, r1
     4ea:	c1 2c       	mov	r12, r1
     4ec:	d1 2c       	mov	r13, r1
     4ee:	a1 2c       	mov	r10, r1
     4f0:	c8 01       	movw	r24, r16
     4f2:	16 2d       	mov	r17, r6
     4f4:	9a 83       	std	Y+2, r25	; 0x02
     4f6:	89 83       	std	Y+1, r24	; 0x01
     4f8:	07 2d       	mov	r16, r7
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//UWriteString(" \n Actual current \n");
	I_avg=0;
	for (n=0;n<number_of_samples;n++)
	{
		actual_current = ((5.00*current_adc[n])/1024.00)-average_current;
     4fa:	a9 81       	ldd	r26, Y+1	; 0x01
     4fc:	ba 81       	ldd	r27, Y+2	; 0x02
     4fe:	6d 91       	ld	r22, X+
     500:	7d 91       	ld	r23, X+
     502:	ba 83       	std	Y+2, r27	; 0x02
     504:	a9 83       	std	Y+1, r26	; 0x01
     506:	88 27       	eor	r24, r24
     508:	77 fd       	sbrc	r23, 7
     50a:	80 95       	com	r24
     50c:	98 2f       	mov	r25, r24
     50e:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     512:	20 e0       	ldi	r18, 0x00	; 0
     514:	30 e0       	ldi	r19, 0x00	; 0
     516:	40 ea       	ldi	r20, 0xA0	; 160
     518:	50 e4       	ldi	r21, 0x40	; 64
     51a:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     51e:	20 e0       	ldi	r18, 0x00	; 0
     520:	30 e0       	ldi	r19, 0x00	; 0
     522:	40 e8       	ldi	r20, 0x80	; 128
     524:	5a e3       	ldi	r21, 0x3A	; 58
     526:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     52a:	29 85       	ldd	r18, Y+9	; 0x09
     52c:	3a 85       	ldd	r19, Y+10	; 0x0a
     52e:	4b 85       	ldd	r20, Y+11	; 0x0b
     530:	5c 85       	ldd	r21, Y+12	; 0x0c
     532:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     536:	2b 01       	movw	r4, r22
     538:	3c 01       	movw	r6, r24
		I_avg=I_avg+actual_current;
     53a:	9b 01       	movw	r18, r22
     53c:	ac 01       	movw	r20, r24
     53e:	6b 2d       	mov	r22, r11
     540:	7c 2d       	mov	r23, r12
     542:	8d 2d       	mov	r24, r13
     544:	9a 2d       	mov	r25, r10
     546:	0e 94 6d 07 	call	0xeda	; 0xeda <__addsf3>
     54a:	b6 2e       	mov	r11, r22
     54c:	c7 2e       	mov	r12, r23
     54e:	d8 2e       	mov	r13, r24
     550:	a9 2e       	mov	r10, r25
		current_squared_sum = current_squared_sum+pow(actual_current,2);
     552:	a3 01       	movw	r20, r6
     554:	92 01       	movw	r18, r4
     556:	c3 01       	movw	r24, r6
     558:	b2 01       	movw	r22, r4
     55a:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     55e:	2e 2d       	mov	r18, r14
     560:	3f 2d       	mov	r19, r15
     562:	41 2f       	mov	r20, r17
     564:	50 2f       	mov	r21, r16
     566:	0e 94 6d 07 	call	0xeda	; 0xeda <__addsf3>
		
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//UWriteString(" \n Actual current \n");
	I_avg=0;
	for (n=0;n<number_of_samples;n++)
     56a:	e9 81       	ldd	r30, Y+1	; 0x01
     56c:	fa 81       	ldd	r31, Y+2	; 0x02
     56e:	e8 15       	cp	r30, r8
     570:	f9 05       	cpc	r31, r9
     572:	29 f0       	breq	.+10     	; 0x57e <calculate_power_factor+0x302>
	{
		actual_current = ((5.00*current_adc[n])/1024.00)-average_current;
		I_avg=I_avg+actual_current;
		current_squared_sum = current_squared_sum+pow(actual_current,2);
     574:	e6 2e       	mov	r14, r22
     576:	f7 2e       	mov	r15, r23
     578:	18 2f       	mov	r17, r24
     57a:	09 2f       	mov	r16, r25
     57c:	be cf       	rjmp	.-132    	; 0x4fa <calculate_power_factor+0x27e>
     57e:	e6 2e       	mov	r14, r22
     580:	f7 2e       	mov	r15, r23
     582:	08 2f       	mov	r16, r24
     584:	19 2f       	mov	r17, r25
     586:	8b 2d       	mov	r24, r11
     588:	9c 2d       	mov	r25, r12
     58a:	ad 2d       	mov	r26, r13
     58c:	ba 2d       	mov	r27, r10
     58e:	80 93 bc 00 	sts	0x00BC, r24
     592:	90 93 bd 00 	sts	0x00BD, r25
     596:	a0 93 be 00 	sts	0x00BE, r26
     59a:	b0 93 bf 00 	sts	0x00BF, r27
     59e:	8e 2d       	mov	r24, r14
     5a0:	9f 2d       	mov	r25, r15
     5a2:	a0 2f       	mov	r26, r16
     5a4:	b1 2f       	mov	r27, r17
     5a6:	80 93 b4 00 	sts	0x00B4, r24
     5aa:	90 93 b5 00 	sts	0x00B5, r25
     5ae:	a0 93 b6 00 	sts	0x00B6, r26
     5b2:	b0 93 b7 00 	sts	0x00B7, r27
		//UWriteString("\t");
		
		
	}
	
	Vrms = volt_square_sum/number_of_samples;
     5b6:	20 e0       	ldi	r18, 0x00	; 0
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	48 e4       	ldi	r20, 0x48	; 72
     5bc:	53 e4       	ldi	r21, 0x43	; 67
     5be:	60 91 b8 00 	lds	r22, 0x00B8
     5c2:	70 91 b9 00 	lds	r23, 0x00B9
     5c6:	80 91 ba 00 	lds	r24, 0x00BA
     5ca:	90 91 bb 00 	lds	r25, 0x00BB
     5ce:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__divsf3>
	Vrms=sqrt(Vrms);
     5d2:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <sqrt>
     5d6:	69 83       	std	Y+1, r22	; 0x01
     5d8:	7a 83       	std	Y+2, r23	; 0x02
     5da:	8b 83       	std	Y+3, r24	; 0x03
     5dc:	9c 83       	std	Y+4, r25	; 0x04
     5de:	60 93 c8 00 	sts	0x00C8, r22
     5e2:	70 93 c9 00 	sts	0x00C9, r23
     5e6:	80 93 ca 00 	sts	0x00CA, r24
     5ea:	90 93 cb 00 	sts	0x00CB, r25
	//Vrms = 511.00/11*Vrms;
	Irms = current_squared_sum/number_of_samples;
     5ee:	20 e0       	ldi	r18, 0x00	; 0
     5f0:	30 e0       	ldi	r19, 0x00	; 0
     5f2:	48 e4       	ldi	r20, 0x48	; 72
     5f4:	53 e4       	ldi	r21, 0x43	; 67
     5f6:	6e 2d       	mov	r22, r14
     5f8:	7f 2d       	mov	r23, r15
     5fa:	80 2f       	mov	r24, r16
     5fc:	91 2f       	mov	r25, r17
     5fe:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__divsf3>
	Irms=sqrt(Irms);
     602:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <sqrt>
     606:	6d 83       	std	Y+5, r22	; 0x05
     608:	7e 83       	std	Y+6, r23	; 0x06
     60a:	8f 83       	std	Y+7, r24	; 0x07
     60c:	98 87       	std	Y+8, r25	; 0x08
     60e:	60 93 c4 00 	sts	0x00C4, r22
     612:	70 93 c5 00 	sts	0x00C5, r23
     616:	80 93 c6 00 	sts	0x00C6, r24
     61a:	90 93 c7 00 	sts	0x00C7, r25
     61e:	0f 2e       	mov	r0, r31
     620:	f6 ee       	ldi	r31, 0xE6	; 230
     622:	6f 2e       	mov	r6, r31
     624:	f0 e0       	ldi	r31, 0x00	; 0
     626:	7f 2e       	mov	r7, r31
     628:	f0 2d       	mov	r31, r0
     62a:	0f 2e       	mov	r0, r31
     62c:	f6 e7       	ldi	r31, 0x76	; 118
     62e:	4f 2e       	mov	r4, r31
     630:	f2 e0       	ldi	r31, 0x02	; 2
     632:	5f 2e       	mov	r5, r31
     634:	f0 2d       	mov	r31, r0
     636:	10 e0       	ldi	r17, 0x00	; 0
     638:	e1 2c       	mov	r14, r1
     63a:	f1 2c       	mov	r15, r1
     63c:	00 e0       	ldi	r16, 0x00	; 0
     63e:	c2 01       	movw	r24, r4
     640:	5e 2c       	mov	r5, r14
     642:	9a 8b       	std	Y+18, r25	; 0x12
     644:	89 8b       	std	Y+17, r24	; 0x11
     646:	4f 2c       	mov	r4, r15
	
	//Instantaneous power and real power
	real_power = 0;
	for (n=0;n<number_of_samples;n++)
	{
		actual_volt = ((5.00*voltage_adc[n])/1024.00)-average_volt;
     648:	a9 89       	ldd	r26, Y+17	; 0x11
     64a:	ba 89       	ldd	r27, Y+18	; 0x12
     64c:	6d 91       	ld	r22, X+
     64e:	7d 91       	ld	r23, X+
     650:	ba 8b       	std	Y+18, r27	; 0x12
     652:	a9 8b       	std	Y+17, r26	; 0x11
     654:	88 27       	eor	r24, r24
     656:	77 fd       	sbrc	r23, 7
     658:	80 95       	com	r24
     65a:	98 2f       	mov	r25, r24
     65c:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     660:	20 e0       	ldi	r18, 0x00	; 0
     662:	30 e0       	ldi	r19, 0x00	; 0
     664:	40 ea       	ldi	r20, 0xA0	; 160
     666:	50 e4       	ldi	r21, 0x40	; 64
     668:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     66c:	20 e0       	ldi	r18, 0x00	; 0
     66e:	30 e0       	ldi	r19, 0x00	; 0
     670:	40 e8       	ldi	r20, 0x80	; 128
     672:	5a e3       	ldi	r21, 0x3A	; 58
     674:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     678:	2d 85       	ldd	r18, Y+13	; 0x0d
     67a:	3e 85       	ldd	r19, Y+14	; 0x0e
     67c:	4f 85       	ldd	r20, Y+15	; 0x0f
     67e:	58 89       	ldd	r21, Y+16	; 0x10
     680:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     684:	4b 01       	movw	r8, r22
     686:	5c 01       	movw	r10, r24
		//actual_volt = actual_volt*511.00/11;
		actual_current = ((5.00*current_adc[n])/1024.00)-average_current;
     688:	f3 01       	movw	r30, r6
     68a:	61 91       	ld	r22, Z+
     68c:	71 91       	ld	r23, Z+
     68e:	3f 01       	movw	r6, r30
     690:	88 27       	eor	r24, r24
     692:	77 fd       	sbrc	r23, 7
     694:	80 95       	com	r24
     696:	98 2f       	mov	r25, r24
     698:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     69c:	20 e0       	ldi	r18, 0x00	; 0
     69e:	30 e0       	ldi	r19, 0x00	; 0
     6a0:	40 ea       	ldi	r20, 0xA0	; 160
     6a2:	50 e4       	ldi	r21, 0x40	; 64
     6a4:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     6a8:	20 e0       	ldi	r18, 0x00	; 0
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	40 e8       	ldi	r20, 0x80	; 128
     6ae:	5a e3       	ldi	r21, 0x3A	; 58
     6b0:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     6b4:	29 85       	ldd	r18, Y+9	; 0x09
     6b6:	3a 85       	ldd	r19, Y+10	; 0x0a
     6b8:	4b 85       	ldd	r20, Y+11	; 0x0b
     6ba:	5c 85       	ldd	r21, Y+12	; 0x0c
     6bc:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     6c0:	6b 01       	movw	r12, r22
     6c2:	7c 01       	movw	r14, r24
		//actual_current = actual_current/2.2;
		real_power = real_power+(actual_volt*actual_current);
     6c4:	9b 01       	movw	r18, r22
     6c6:	ac 01       	movw	r20, r24
     6c8:	c5 01       	movw	r24, r10
     6ca:	b4 01       	movw	r22, r8
     6cc:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     6d0:	9b 01       	movw	r18, r22
     6d2:	ac 01       	movw	r20, r24
     6d4:	61 2f       	mov	r22, r17
     6d6:	75 2d       	mov	r23, r5
     6d8:	84 2d       	mov	r24, r4
     6da:	90 2f       	mov	r25, r16
     6dc:	0e 94 6d 07 	call	0xeda	; 0xeda <__addsf3>
	//Irms = Irms/2.2;
	
	
	//Instantaneous power and real power
	real_power = 0;
	for (n=0;n<number_of_samples;n++)
     6e0:	29 89       	ldd	r18, Y+17	; 0x11
     6e2:	3a 89       	ldd	r19, Y+18	; 0x12
     6e4:	22 16       	cp	r2, r18
     6e6:	33 06       	cpc	r3, r19
     6e8:	29 f0       	breq	.+10     	; 0x6f4 <calculate_power_factor+0x478>
	{
		actual_volt = ((5.00*voltage_adc[n])/1024.00)-average_volt;
		//actual_volt = actual_volt*511.00/11;
		actual_current = ((5.00*current_adc[n])/1024.00)-average_current;
		//actual_current = actual_current/2.2;
		real_power = real_power+(actual_volt*actual_current);
     6ea:	16 2f       	mov	r17, r22
     6ec:	57 2e       	mov	r5, r23
     6ee:	48 2e       	mov	r4, r24
     6f0:	09 2f       	mov	r16, r25
     6f2:	aa cf       	rjmp	.-172    	; 0x648 <calculate_power_factor+0x3cc>
     6f4:	28 ec       	ldi	r18, 0xC8	; 200
     6f6:	20 93 e0 00 	sts	0x00E0, r18
     6fa:	80 92 d0 00 	sts	0x00D0, r8
     6fe:	90 92 d1 00 	sts	0x00D1, r9
     702:	a0 92 d2 00 	sts	0x00D2, r10
     706:	b0 92 d3 00 	sts	0x00D3, r11
     70a:	c0 92 cc 00 	sts	0x00CC, r12
     70e:	d0 92 cd 00 	sts	0x00CD, r13
     712:	e0 92 ce 00 	sts	0x00CE, r14
     716:	f0 92 cf 00 	sts	0x00CF, r15
		
	}
	real_power = real_power/number_of_samples;
     71a:	20 e0       	ldi	r18, 0x00	; 0
     71c:	30 e0       	ldi	r19, 0x00	; 0
     71e:	48 e4       	ldi	r20, 0x48	; 72
     720:	53 e4       	ldi	r21, 0x43	; 67
     722:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__divsf3>
     726:	6b 01       	movw	r12, r22
     728:	7c 01       	movw	r14, r24
     72a:	60 93 b0 00 	sts	0x00B0, r22
     72e:	70 93 b1 00 	sts	0x00B1, r23
     732:	80 93 b2 00 	sts	0x00B2, r24
     736:	90 93 b3 00 	sts	0x00B3, r25
	power_factor = real_power/(Vrms*Irms);
     73a:	2d 81       	ldd	r18, Y+5	; 0x05
     73c:	3e 81       	ldd	r19, Y+6	; 0x06
     73e:	4f 81       	ldd	r20, Y+7	; 0x07
     740:	58 85       	ldd	r21, Y+8	; 0x08
     742:	69 81       	ldd	r22, Y+1	; 0x01
     744:	7a 81       	ldd	r23, Y+2	; 0x02
     746:	8b 81       	ldd	r24, Y+3	; 0x03
     748:	9c 81       	ldd	r25, Y+4	; 0x04
     74a:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     74e:	9b 01       	movw	r18, r22
     750:	ac 01       	movw	r20, r24
     752:	c7 01       	movw	r24, r14
     754:	b6 01       	movw	r22, r12
     756:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__divsf3>
     75a:	60 93 dc 00 	sts	0x00DC, r22
     75e:	70 93 dd 00 	sts	0x00DD, r23
     762:	80 93 de 00 	sts	0x00DE, r24
     766:	90 93 df 00 	sts	0x00DF, r25
	UWriteString("\n Vrms = ");
     76a:	8a e7       	ldi	r24, 0x7A	; 122
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	0e 94 39 07 	call	0xe72	; 0xe72 <UWriteString>
	print_double(Vrms,4,3);
     772:	60 91 c8 00 	lds	r22, 0x00C8
     776:	70 91 c9 00 	lds	r23, 0x00C9
     77a:	80 91 ca 00 	lds	r24, 0x00CA
     77e:	90 91 cb 00 	lds	r25, 0x00CB
     782:	23 e0       	ldi	r18, 0x03	; 3
     784:	44 e0       	ldi	r20, 0x04	; 4
     786:	0e 94 4b 07 	call	0xe96	; 0xe96 <print_double>
	UWriteString("V");
     78a:	84 e8       	ldi	r24, 0x84	; 132
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	0e 94 39 07 	call	0xe72	; 0xe72 <UWriteString>
	UWriteString("\tIrms = ");
     792:	86 e8       	ldi	r24, 0x86	; 134
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	0e 94 39 07 	call	0xe72	; 0xe72 <UWriteString>
	Irms=Irms*1000;
     79a:	20 e0       	ldi	r18, 0x00	; 0
     79c:	30 e0       	ldi	r19, 0x00	; 0
     79e:	4a e7       	ldi	r20, 0x7A	; 122
     7a0:	54 e4       	ldi	r21, 0x44	; 68
     7a2:	60 91 c4 00 	lds	r22, 0x00C4
     7a6:	70 91 c5 00 	lds	r23, 0x00C5
     7aa:	80 91 c6 00 	lds	r24, 0x00C6
     7ae:	90 91 c7 00 	lds	r25, 0x00C7
     7b2:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     7b6:	60 93 c4 00 	sts	0x00C4, r22
     7ba:	70 93 c5 00 	sts	0x00C5, r23
     7be:	80 93 c6 00 	sts	0x00C6, r24
     7c2:	90 93 c7 00 	sts	0x00C7, r25
	print_double(Irms,4,3);
     7c6:	23 e0       	ldi	r18, 0x03	; 3
     7c8:	44 e0       	ldi	r20, 0x04	; 4
     7ca:	0e 94 4b 07 	call	0xe96	; 0xe96 <print_double>
	UWriteString("mA");
     7ce:	8f e8       	ldi	r24, 0x8F	; 143
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	0e 94 39 07 	call	0xe72	; 0xe72 <UWriteString>
	UWriteString("\tPower = ");
     7d6:	82 e9       	ldi	r24, 0x92	; 146
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	0e 94 39 07 	call	0xe72	; 0xe72 <UWriteString>
	print_double(real_power, 3,5);
     7de:	60 91 b0 00 	lds	r22, 0x00B0
     7e2:	70 91 b1 00 	lds	r23, 0x00B1
     7e6:	80 91 b2 00 	lds	r24, 0x00B2
     7ea:	90 91 b3 00 	lds	r25, 0x00B3
     7ee:	25 e0       	ldi	r18, 0x05	; 5
     7f0:	43 e0       	ldi	r20, 0x03	; 3
     7f2:	0e 94 4b 07 	call	0xe96	; 0xe96 <print_double>
	UWriteString("W");
     7f6:	8c e9       	ldi	r24, 0x9C	; 156
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	0e 94 39 07 	call	0xe72	; 0xe72 <UWriteString>
	UWriteString("\tPower factor = ");
     7fe:	8e e9       	ldi	r24, 0x9E	; 158
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	0e 94 39 07 	call	0xe72	; 0xe72 <UWriteString>
	print_double(power_factor,4,3);
     806:	60 91 dc 00 	lds	r22, 0x00DC
     80a:	70 91 dd 00 	lds	r23, 0x00DD
     80e:	80 91 de 00 	lds	r24, 0x00DE
     812:	90 91 df 00 	lds	r25, 0x00DF
     816:	23 e0       	ldi	r18, 0x03	; 3
     818:	44 e0       	ldi	r20, 0x04	; 4
     81a:	0e 94 4b 07 	call	0xe96	; 0xe96 <print_double>
	

	
}
     81e:	62 96       	adiw	r28, 0x12	; 18
     820:	0f b6       	in	r0, 0x3f	; 63
     822:	f8 94       	cli
     824:	de bf       	out	0x3e, r29	; 62
     826:	0f be       	out	0x3f, r0	; 63
     828:	cd bf       	out	0x3d, r28	; 61
     82a:	df 91       	pop	r29
     82c:	cf 91       	pop	r28
     82e:	1f 91       	pop	r17
     830:	0f 91       	pop	r16
     832:	ff 90       	pop	r15
     834:	ef 90       	pop	r14
     836:	df 90       	pop	r13
     838:	cf 90       	pop	r12
     83a:	bf 90       	pop	r11
     83c:	af 90       	pop	r10
     83e:	9f 90       	pop	r9
     840:	8f 90       	pop	r8
     842:	7f 90       	pop	r7
     844:	6f 90       	pop	r6
     846:	5f 90       	pop	r5
     848:	4f 90       	pop	r4
     84a:	3f 90       	pop	r3
     84c:	2f 90       	pop	r2
     84e:	08 95       	ret

00000850 <voltage_zero_cross_time>:

int voltage_zero_cross_time()
{
     850:	5f 92       	push	r5
     852:	6f 92       	push	r6
     854:	7f 92       	push	r7
     856:	8f 92       	push	r8
     858:	9f 92       	push	r9
     85a:	af 92       	push	r10
     85c:	bf 92       	push	r11
     85e:	cf 92       	push	r12
     860:	df 92       	push	r13
     862:	ef 92       	push	r14
     864:	ff 92       	push	r15
     866:	0f 93       	push	r16
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
	int index = 0;
	actual_volt = ((5.00*voltage_adc[0])/1024.00)-average_volt;
     86e:	80 90 d8 00 	lds	r8, 0x00D8
     872:	90 90 d9 00 	lds	r9, 0x00D9
     876:	a0 90 da 00 	lds	r10, 0x00DA
     87a:	b0 90 db 00 	lds	r11, 0x00DB
     87e:	60 91 76 02 	lds	r22, 0x0276
     882:	70 91 77 02 	lds	r23, 0x0277
     886:	88 27       	eor	r24, r24
     888:	77 fd       	sbrc	r23, 7
     88a:	80 95       	com	r24
     88c:	98 2f       	mov	r25, r24
     88e:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	40 ea       	ldi	r20, 0xA0	; 160
     898:	50 e4       	ldi	r21, 0x40	; 64
     89a:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	40 e8       	ldi	r20, 0x80	; 128
     8a4:	5a e3       	ldi	r21, 0x3A	; 58
     8a6:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     8aa:	a5 01       	movw	r20, r10
     8ac:	94 01       	movw	r18, r8
     8ae:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
	if (actual_volt>0)
     8b2:	20 e0       	ldi	r18, 0x00	; 0
     8b4:	30 e0       	ldi	r19, 0x00	; 0
     8b6:	a9 01       	movw	r20, r18
     8b8:	0e 94 ef 08 	call	0x11de	; 0x11de <__gesf2>
     8bc:	18 16       	cp	r1, r24
     8be:	0c f0       	brlt	.+2      	; 0x8c2 <__stack+0x63>
     8c0:	6f c0       	rjmp	.+222    	; 0x9a0 <__stack+0x141>
	{
		for (i=1;i<number_of_samples;i++)
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	80 93 e1 00 	sts	0x00E1, r24
		{
			actual_volt = ((5.00*voltage_adc[i])/1024.00)-average_volt;
     8c8:	60 91 78 02 	lds	r22, 0x0278
     8cc:	70 91 79 02 	lds	r23, 0x0279
     8d0:	88 27       	eor	r24, r24
     8d2:	77 fd       	sbrc	r23, 7
     8d4:	80 95       	com	r24
     8d6:	98 2f       	mov	r25, r24
     8d8:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     8dc:	20 e0       	ldi	r18, 0x00	; 0
     8de:	30 e0       	ldi	r19, 0x00	; 0
     8e0:	40 ea       	ldi	r20, 0xA0	; 160
     8e2:	50 e4       	ldi	r21, 0x40	; 64
     8e4:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     8e8:	20 e0       	ldi	r18, 0x00	; 0
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	40 e8       	ldi	r20, 0x80	; 128
     8ee:	5a e3       	ldi	r21, 0x3A	; 58
     8f0:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     8f4:	a5 01       	movw	r20, r10
     8f6:	94 01       	movw	r18, r8
     8f8:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     8fc:	60 93 d0 00 	sts	0x00D0, r22
     900:	70 93 d1 00 	sts	0x00D1, r23
     904:	80 93 d2 00 	sts	0x00D2, r24
     908:	90 93 d3 00 	sts	0x00D3, r25
			if (actual_volt<0)
     90c:	20 e0       	ldi	r18, 0x00	; 0
     90e:	30 e0       	ldi	r19, 0x00	; 0
     910:	a9 01       	movw	r20, r18
     912:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__cmpsf2>
     916:	88 23       	and	r24, r24
     918:	0c f0       	brlt	.+2      	; 0x91c <__stack+0xbd>
     91a:	bb c0       	rjmp	.+374    	; 0xa92 <__stack+0x233>
     91c:	b0 c0       	rjmp	.+352    	; 0xa7e <__stack+0x21f>
	actual_volt = ((5.00*voltage_adc[0])/1024.00)-average_volt;
	if (actual_volt>0)
	{
		for (i=1;i<number_of_samples;i++)
		{
			actual_volt = ((5.00*voltage_adc[i])/1024.00)-average_volt;
     91e:	6c 2e       	mov	r6, r28
     920:	7d 2e       	mov	r7, r29
     922:	f8 01       	movw	r30, r16
     924:	61 91       	ld	r22, Z+
     926:	71 91       	ld	r23, Z+
     928:	8f 01       	movw	r16, r30
     92a:	88 27       	eor	r24, r24
     92c:	77 fd       	sbrc	r23, 7
     92e:	80 95       	com	r24
     930:	98 2f       	mov	r25, r24
     932:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     936:	20 e0       	ldi	r18, 0x00	; 0
     938:	30 e0       	ldi	r19, 0x00	; 0
     93a:	40 ea       	ldi	r20, 0xA0	; 160
     93c:	50 e4       	ldi	r21, 0x40	; 64
     93e:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     942:	20 e0       	ldi	r18, 0x00	; 0
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	40 e8       	ldi	r20, 0x80	; 128
     948:	5a e3       	ldi	r21, 0x3A	; 58
     94a:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     94e:	a5 01       	movw	r20, r10
     950:	94 01       	movw	r18, r8
     952:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     956:	6b 01       	movw	r12, r22
     958:	7c 01       	movw	r14, r24
			if (actual_volt<0)
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	a9 01       	movw	r20, r18
     960:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__cmpsf2>
     964:	88 23       	and	r24, r24
     966:	5c f4       	brge	.+22     	; 0x97e <__stack+0x11f>
     968:	c0 92 d0 00 	sts	0x00D0, r12
     96c:	d0 92 d1 00 	sts	0x00D1, r13
     970:	e0 92 d2 00 	sts	0x00D2, r14
     974:	f0 92 d3 00 	sts	0x00D3, r15
     978:	50 92 e1 00 	sts	0x00E1, r5
     97c:	87 c0       	rjmp	.+270    	; 0xa8c <__stack+0x22d>
     97e:	5c 2e       	mov	r5, r28
     980:	53 94       	inc	r5
     982:	21 96       	adiw	r28, 0x01	; 1
{
	int index = 0;
	actual_volt = ((5.00*voltage_adc[0])/1024.00)-average_volt;
	if (actual_volt>0)
	{
		for (i=1;i<number_of_samples;i++)
     984:	c8 3c       	cpi	r28, 0xC8	; 200
     986:	d1 05       	cpc	r29, r1
     988:	51 f6       	brne	.-108    	; 0x91e <__stack+0xbf>
     98a:	c0 92 d0 00 	sts	0x00D0, r12
     98e:	d0 92 d1 00 	sts	0x00D1, r13
     992:	e0 92 d2 00 	sts	0x00D2, r14
     996:	f0 92 d3 00 	sts	0x00D3, r15
     99a:	50 92 e1 00 	sts	0x00E1, r5
     99e:	6e c0       	rjmp	.+220    	; 0xa7c <__stack+0x21d>
			
		}
	}
	else
	{
		for (i=1;i<number_of_samples;i++)
     9a0:	81 e0       	ldi	r24, 0x01	; 1
     9a2:	80 93 e1 00 	sts	0x00E1, r24
		{
			actual_volt = ((5.00*voltage_adc[i])/1024.00)-average_volt;
     9a6:	60 91 78 02 	lds	r22, 0x0278
     9aa:	70 91 79 02 	lds	r23, 0x0279
     9ae:	88 27       	eor	r24, r24
     9b0:	77 fd       	sbrc	r23, 7
     9b2:	80 95       	com	r24
     9b4:	98 2f       	mov	r25, r24
     9b6:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     9ba:	20 e0       	ldi	r18, 0x00	; 0
     9bc:	30 e0       	ldi	r19, 0x00	; 0
     9be:	40 ea       	ldi	r20, 0xA0	; 160
     9c0:	50 e4       	ldi	r21, 0x40	; 64
     9c2:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     9c6:	20 e0       	ldi	r18, 0x00	; 0
     9c8:	30 e0       	ldi	r19, 0x00	; 0
     9ca:	40 e8       	ldi	r20, 0x80	; 128
     9cc:	5a e3       	ldi	r21, 0x3A	; 58
     9ce:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     9d2:	a5 01       	movw	r20, r10
     9d4:	94 01       	movw	r18, r8
     9d6:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     9da:	60 93 d0 00 	sts	0x00D0, r22
     9de:	70 93 d1 00 	sts	0x00D1, r23
     9e2:	80 93 d2 00 	sts	0x00D2, r24
     9e6:	90 93 d3 00 	sts	0x00D3, r25
			if (actual_volt>0)
     9ea:	20 e0       	ldi	r18, 0x00	; 0
     9ec:	30 e0       	ldi	r19, 0x00	; 0
     9ee:	a9 01       	movw	r20, r18
     9f0:	0e 94 ef 08 	call	0x11de	; 0x11de <__gesf2>
     9f4:	18 16       	cp	r1, r24
     9f6:	0c f0       	brlt	.+2      	; 0x9fa <__stack+0x19b>
     9f8:	54 c0       	rjmp	.+168    	; 0xaa2 <__stack+0x243>
     9fa:	45 c0       	rjmp	.+138    	; 0xa86 <__stack+0x227>
	}
	else
	{
		for (i=1;i<number_of_samples;i++)
		{
			actual_volt = ((5.00*voltage_adc[i])/1024.00)-average_volt;
     9fc:	6c 2e       	mov	r6, r28
     9fe:	7d 2e       	mov	r7, r29
     a00:	f8 01       	movw	r30, r16
     a02:	61 91       	ld	r22, Z+
     a04:	71 91       	ld	r23, Z+
     a06:	8f 01       	movw	r16, r30
     a08:	88 27       	eor	r24, r24
     a0a:	77 fd       	sbrc	r23, 7
     a0c:	80 95       	com	r24
     a0e:	98 2f       	mov	r25, r24
     a10:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     a14:	20 e0       	ldi	r18, 0x00	; 0
     a16:	30 e0       	ldi	r19, 0x00	; 0
     a18:	40 ea       	ldi	r20, 0xA0	; 160
     a1a:	50 e4       	ldi	r21, 0x40	; 64
     a1c:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     a20:	20 e0       	ldi	r18, 0x00	; 0
     a22:	30 e0       	ldi	r19, 0x00	; 0
     a24:	40 e8       	ldi	r20, 0x80	; 128
     a26:	5a e3       	ldi	r21, 0x3A	; 58
     a28:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     a2c:	a5 01       	movw	r20, r10
     a2e:	94 01       	movw	r18, r8
     a30:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     a34:	6b 01       	movw	r12, r22
     a36:	7c 01       	movw	r14, r24
			if (actual_volt>0)
     a38:	20 e0       	ldi	r18, 0x00	; 0
     a3a:	30 e0       	ldi	r19, 0x00	; 0
     a3c:	a9 01       	movw	r20, r18
     a3e:	0e 94 ef 08 	call	0x11de	; 0x11de <__gesf2>
     a42:	18 16       	cp	r1, r24
     a44:	5c f4       	brge	.+22     	; 0xa5c <__stack+0x1fd>
     a46:	c0 92 d0 00 	sts	0x00D0, r12
     a4a:	d0 92 d1 00 	sts	0x00D1, r13
     a4e:	e0 92 d2 00 	sts	0x00D2, r14
     a52:	f0 92 d3 00 	sts	0x00D3, r15
     a56:	50 92 e1 00 	sts	0x00E1, r5
     a5a:	18 c0       	rjmp	.+48     	; 0xa8c <__stack+0x22d>
     a5c:	5c 2e       	mov	r5, r28
     a5e:	53 94       	inc	r5
     a60:	21 96       	adiw	r28, 0x01	; 1
			
		}
	}
	else
	{
		for (i=1;i<number_of_samples;i++)
     a62:	c8 3c       	cpi	r28, 0xC8	; 200
     a64:	d1 05       	cpc	r29, r1
     a66:	51 f6       	brne	.-108    	; 0x9fc <__stack+0x19d>
     a68:	c0 92 d0 00 	sts	0x00D0, r12
     a6c:	d0 92 d1 00 	sts	0x00D1, r13
     a70:	e0 92 d2 00 	sts	0x00D2, r14
     a74:	f0 92 d3 00 	sts	0x00D3, r15
     a78:	50 92 e1 00 	sts	0x00E1, r5
     a7c:	1a c0       	rjmp	.+52     	; 0xab2 <__stack+0x253>
	actual_volt = ((5.00*voltage_adc[0])/1024.00)-average_volt;
	if (actual_volt>0)
	{
		for (i=1;i<number_of_samples;i++)
		{
			actual_volt = ((5.00*voltage_adc[i])/1024.00)-average_volt;
     a7e:	66 24       	eor	r6, r6
     a80:	63 94       	inc	r6
     a82:	71 2c       	mov	r7, r1
     a84:	03 c0       	rjmp	.+6      	; 0xa8c <__stack+0x22d>
	}
	else
	{
		for (i=1;i<number_of_samples;i++)
		{
			actual_volt = ((5.00*voltage_adc[i])/1024.00)-average_volt;
     a86:	66 24       	eor	r6, r6
     a88:	63 94       	inc	r6
     a8a:	71 2c       	mov	r7, r1
     a8c:	86 2d       	mov	r24, r6
     a8e:	97 2d       	mov	r25, r7
     a90:	10 c0       	rjmp	.+32     	; 0xab2 <__stack+0x253>
     a92:	0a e7       	ldi	r16, 0x7A	; 122
     a94:	12 e0       	ldi	r17, 0x02	; 2
{
	int index = 0;
	actual_volt = ((5.00*voltage_adc[0])/1024.00)-average_volt;
	if (actual_volt>0)
	{
		for (i=1;i<number_of_samples;i++)
     a96:	c2 e0       	ldi	r28, 0x02	; 2
     a98:	d0 e0       	ldi	r29, 0x00	; 0
     a9a:	68 94       	set
     a9c:	55 24       	eor	r5, r5
     a9e:	51 f8       	bld	r5, 1
     aa0:	3e cf       	rjmp	.-388    	; 0x91e <__stack+0xbf>
     aa2:	0a e7       	ldi	r16, 0x7A	; 122
     aa4:	12 e0       	ldi	r17, 0x02	; 2
			
		}
	}
	else
	{
		for (i=1;i<number_of_samples;i++)
     aa6:	c2 e0       	ldi	r28, 0x02	; 2
     aa8:	d0 e0       	ldi	r29, 0x00	; 0
     aaa:	68 94       	set
     aac:	55 24       	eor	r5, r5
     aae:	51 f8       	bld	r5, 1
     ab0:	a5 cf       	rjmp	.-182    	; 0x9fc <__stack+0x19d>
			
		}
		
	}
	//return(index);
}
     ab2:	df 91       	pop	r29
     ab4:	cf 91       	pop	r28
     ab6:	1f 91       	pop	r17
     ab8:	0f 91       	pop	r16
     aba:	ff 90       	pop	r15
     abc:	ef 90       	pop	r14
     abe:	df 90       	pop	r13
     ac0:	cf 90       	pop	r12
     ac2:	bf 90       	pop	r11
     ac4:	af 90       	pop	r10
     ac6:	9f 90       	pop	r9
     ac8:	8f 90       	pop	r8
     aca:	7f 90       	pop	r7
     acc:	6f 90       	pop	r6
     ace:	5f 90       	pop	r5
     ad0:	08 95       	ret

00000ad2 <current_zero_cross_time>:

int current_zero_cross_time()
{
     ad2:	2f 92       	push	r2
     ad4:	3f 92       	push	r3
     ad6:	4f 92       	push	r4
     ad8:	5f 92       	push	r5
     ada:	6f 92       	push	r6
     adc:	7f 92       	push	r7
     ade:	8f 92       	push	r8
     ae0:	9f 92       	push	r9
     ae2:	af 92       	push	r10
     ae4:	bf 92       	push	r11
     ae6:	cf 92       	push	r12
     ae8:	df 92       	push	r13
     aea:	ef 92       	push	r14
     aec:	ff 92       	push	r15
     aee:	0f 93       	push	r16
     af0:	1f 93       	push	r17
     af2:	cf 93       	push	r28
     af4:	df 93       	push	r29
	int index = 0;
	actual_current = ((5.00*current_adc[0])/1024.00)-average_current;
     af6:	c0 90 d4 00 	lds	r12, 0x00D4
     afa:	d0 90 d5 00 	lds	r13, 0x00D5
     afe:	e0 90 d6 00 	lds	r14, 0x00D6
     b02:	f0 90 d7 00 	lds	r15, 0x00D7
     b06:	60 91 e6 00 	lds	r22, 0x00E6
     b0a:	70 91 e7 00 	lds	r23, 0x00E7
     b0e:	88 27       	eor	r24, r24
     b10:	77 fd       	sbrc	r23, 7
     b12:	80 95       	com	r24
     b14:	98 2f       	mov	r25, r24
     b16:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     b1a:	20 e0       	ldi	r18, 0x00	; 0
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	40 ea       	ldi	r20, 0xA0	; 160
     b20:	50 e4       	ldi	r21, 0x40	; 64
     b22:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     b26:	20 e0       	ldi	r18, 0x00	; 0
     b28:	30 e0       	ldi	r19, 0x00	; 0
     b2a:	40 e8       	ldi	r20, 0x80	; 128
     b2c:	5a e3       	ldi	r21, 0x3A	; 58
     b2e:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     b32:	a7 01       	movw	r20, r14
     b34:	96 01       	movw	r18, r12
     b36:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
	if (actual_current>0)
     b3a:	20 e0       	ldi	r18, 0x00	; 0
     b3c:	30 e0       	ldi	r19, 0x00	; 0
     b3e:	a9 01       	movw	r20, r18
     b40:	0e 94 ef 08 	call	0x11de	; 0x11de <__gesf2>
     b44:	18 16       	cp	r1, r24
     b46:	0c f0       	brlt	.+2      	; 0xb4a <current_zero_cross_time+0x78>
     b48:	6f c0       	rjmp	.+222    	; 0xc28 <current_zero_cross_time+0x156>
	{
		for (i=1;i<number_of_samples;i++)
     b4a:	81 e0       	ldi	r24, 0x01	; 1
     b4c:	80 93 e1 00 	sts	0x00E1, r24
		{
			actual_current = ((5.00*current_adc[i])/1024.00)-average_current;
     b50:	60 91 e8 00 	lds	r22, 0x00E8
     b54:	70 91 e9 00 	lds	r23, 0x00E9
     b58:	88 27       	eor	r24, r24
     b5a:	77 fd       	sbrc	r23, 7
     b5c:	80 95       	com	r24
     b5e:	98 2f       	mov	r25, r24
     b60:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     b64:	20 e0       	ldi	r18, 0x00	; 0
     b66:	30 e0       	ldi	r19, 0x00	; 0
     b68:	40 ea       	ldi	r20, 0xA0	; 160
     b6a:	50 e4       	ldi	r21, 0x40	; 64
     b6c:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     b70:	20 e0       	ldi	r18, 0x00	; 0
     b72:	30 e0       	ldi	r19, 0x00	; 0
     b74:	40 e8       	ldi	r20, 0x80	; 128
     b76:	5a e3       	ldi	r21, 0x3A	; 58
     b78:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     b7c:	a7 01       	movw	r20, r14
     b7e:	96 01       	movw	r18, r12
     b80:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     b84:	60 93 cc 00 	sts	0x00CC, r22
     b88:	70 93 cd 00 	sts	0x00CD, r23
     b8c:	80 93 ce 00 	sts	0x00CE, r24
     b90:	90 93 cf 00 	sts	0x00CF, r25
			if (actual_current<0)
     b94:	20 e0       	ldi	r18, 0x00	; 0
     b96:	30 e0       	ldi	r19, 0x00	; 0
     b98:	a9 01       	movw	r20, r18
     b9a:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__cmpsf2>
     b9e:	88 23       	and	r24, r24
     ba0:	0c f0       	brlt	.+2      	; 0xba4 <current_zero_cross_time+0xd2>
     ba2:	bf c0       	rjmp	.+382    	; 0xd22 <current_zero_cross_time+0x250>
     ba4:	b4 c0       	rjmp	.+360    	; 0xd0e <current_zero_cross_time+0x23c>
	actual_current = ((5.00*current_adc[0])/1024.00)-average_current;
	if (actual_current>0)
	{
		for (i=1;i<number_of_samples;i++)
		{
			actual_current = ((5.00*current_adc[i])/1024.00)-average_current;
     ba6:	6c 2e       	mov	r6, r28
     ba8:	7d 2e       	mov	r7, r29
     baa:	f8 01       	movw	r30, r16
     bac:	61 91       	ld	r22, Z+
     bae:	71 91       	ld	r23, Z+
     bb0:	8f 01       	movw	r16, r30
     bb2:	88 27       	eor	r24, r24
     bb4:	77 fd       	sbrc	r23, 7
     bb6:	80 95       	com	r24
     bb8:	98 2f       	mov	r25, r24
     bba:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     bbe:	20 e0       	ldi	r18, 0x00	; 0
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	40 ea       	ldi	r20, 0xA0	; 160
     bc4:	50 e4       	ldi	r21, 0x40	; 64
     bc6:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     bca:	20 e0       	ldi	r18, 0x00	; 0
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	40 e8       	ldi	r20, 0x80	; 128
     bd0:	5a e3       	ldi	r21, 0x3A	; 58
     bd2:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     bd6:	a7 01       	movw	r20, r14
     bd8:	96 01       	movw	r18, r12
     bda:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     bde:	4b 01       	movw	r8, r22
     be0:	5c 01       	movw	r10, r24
			if (actual_current<0)
     be2:	20 e0       	ldi	r18, 0x00	; 0
     be4:	30 e0       	ldi	r19, 0x00	; 0
     be6:	a9 01       	movw	r20, r18
     be8:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__cmpsf2>
     bec:	88 23       	and	r24, r24
     bee:	5c f4       	brge	.+22     	; 0xc06 <current_zero_cross_time+0x134>
     bf0:	80 92 cc 00 	sts	0x00CC, r8
     bf4:	90 92 cd 00 	sts	0x00CD, r9
     bf8:	a0 92 ce 00 	sts	0x00CE, r10
     bfc:	b0 92 cf 00 	sts	0x00CF, r11
     c00:	50 92 e1 00 	sts	0x00E1, r5
     c04:	8b c0       	rjmp	.+278    	; 0xd1c <current_zero_cross_time+0x24a>
     c06:	5c 2e       	mov	r5, r28
     c08:	53 94       	inc	r5
     c0a:	21 96       	adiw	r28, 0x01	; 1
{
	int index = 0;
	actual_current = ((5.00*current_adc[0])/1024.00)-average_current;
	if (actual_current>0)
	{
		for (i=1;i<number_of_samples;i++)
     c0c:	c8 3c       	cpi	r28, 0xC8	; 200
     c0e:	d1 05       	cpc	r29, r1
     c10:	51 f6       	brne	.-108    	; 0xba6 <current_zero_cross_time+0xd4>
     c12:	80 92 cc 00 	sts	0x00CC, r8
     c16:	90 92 cd 00 	sts	0x00CD, r9
     c1a:	a0 92 ce 00 	sts	0x00CE, r10
     c1e:	b0 92 cf 00 	sts	0x00CF, r11
     c22:	50 92 e1 00 	sts	0x00E1, r5
     c26:	72 c0       	rjmp	.+228    	; 0xd0c <current_zero_cross_time+0x23a>
			
		}
	}
	else
	{
		for (i=1;i<number_of_samples;i++)
     c28:	81 e0       	ldi	r24, 0x01	; 1
     c2a:	80 93 e1 00 	sts	0x00E1, r24
		{
			actual_current = ((5.00*current_adc[i])/1024.00)-average_current;
     c2e:	60 91 e8 00 	lds	r22, 0x00E8
     c32:	70 91 e9 00 	lds	r23, 0x00E9
     c36:	88 27       	eor	r24, r24
     c38:	77 fd       	sbrc	r23, 7
     c3a:	80 95       	com	r24
     c3c:	98 2f       	mov	r25, r24
     c3e:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     c42:	20 e0       	ldi	r18, 0x00	; 0
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	40 ea       	ldi	r20, 0xA0	; 160
     c48:	50 e4       	ldi	r21, 0x40	; 64
     c4a:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     c4e:	20 e0       	ldi	r18, 0x00	; 0
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	40 e8       	ldi	r20, 0x80	; 128
     c54:	5a e3       	ldi	r21, 0x3A	; 58
     c56:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     c5a:	a7 01       	movw	r20, r14
     c5c:	96 01       	movw	r18, r12
     c5e:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     c62:	60 93 cc 00 	sts	0x00CC, r22
     c66:	70 93 cd 00 	sts	0x00CD, r23
     c6a:	80 93 ce 00 	sts	0x00CE, r24
     c6e:	90 93 cf 00 	sts	0x00CF, r25
			if (average_current>0)
     c72:	20 e0       	ldi	r18, 0x00	; 0
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	a9 01       	movw	r20, r18
     c78:	c7 01       	movw	r24, r14
     c7a:	b6 01       	movw	r22, r12
     c7c:	0e 94 ef 08 	call	0x11de	; 0x11de <__gesf2>
     c80:	18 16       	cp	r1, r24
     c82:	0c f0       	brlt	.+2      	; 0xc86 <current_zero_cross_time+0x1b4>
     c84:	56 c0       	rjmp	.+172    	; 0xd32 <current_zero_cross_time+0x260>
     c86:	47 c0       	rjmp	.+142    	; 0xd16 <current_zero_cross_time+0x244>
	}
	else
	{
		for (i=1;i<number_of_samples;i++)
		{
			actual_current = ((5.00*current_adc[i])/1024.00)-average_current;
     c88:	6c 2e       	mov	r6, r28
     c8a:	7d 2e       	mov	r7, r29
     c8c:	f8 01       	movw	r30, r16
     c8e:	61 91       	ld	r22, Z+
     c90:	71 91       	ld	r23, Z+
     c92:	8f 01       	movw	r16, r30
     c94:	88 27       	eor	r24, r24
     c96:	77 fd       	sbrc	r23, 7
     c98:	80 95       	com	r24
     c9a:	98 2f       	mov	r25, r24
     c9c:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatsisf>
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	40 ea       	ldi	r20, 0xA0	; 160
     ca6:	50 e4       	ldi	r21, 0x40	; 64
     ca8:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     cac:	20 e0       	ldi	r18, 0x00	; 0
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	40 e8       	ldi	r20, 0x80	; 128
     cb2:	5a e3       	ldi	r21, 0x3A	; 58
     cb4:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     cb8:	a7 01       	movw	r20, r14
     cba:	96 01       	movw	r18, r12
     cbc:	0e 94 6c 07 	call	0xed8	; 0xed8 <__subsf3>
     cc0:	1b 01       	movw	r2, r22
     cc2:	2c 01       	movw	r4, r24
			if (average_current>0)
     cc4:	20 e0       	ldi	r18, 0x00	; 0
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	a9 01       	movw	r20, r18
     cca:	c7 01       	movw	r24, r14
     ccc:	b6 01       	movw	r22, r12
     cce:	0e 94 ef 08 	call	0x11de	; 0x11de <__gesf2>
     cd2:	18 16       	cp	r1, r24
     cd4:	5c f4       	brge	.+22     	; 0xcec <current_zero_cross_time+0x21a>
     cd6:	20 92 cc 00 	sts	0x00CC, r2
     cda:	30 92 cd 00 	sts	0x00CD, r3
     cde:	40 92 ce 00 	sts	0x00CE, r4
     ce2:	50 92 cf 00 	sts	0x00CF, r5
     ce6:	b0 92 e1 00 	sts	0x00E1, r11
     cea:	18 c0       	rjmp	.+48     	; 0xd1c <current_zero_cross_time+0x24a>
     cec:	bc 2e       	mov	r11, r28
     cee:	b3 94       	inc	r11
     cf0:	21 96       	adiw	r28, 0x01	; 1
			
		}
	}
	else
	{
		for (i=1;i<number_of_samples;i++)
     cf2:	c8 3c       	cpi	r28, 0xC8	; 200
     cf4:	d1 05       	cpc	r29, r1
     cf6:	41 f6       	brne	.-112    	; 0xc88 <current_zero_cross_time+0x1b6>
     cf8:	20 92 cc 00 	sts	0x00CC, r2
     cfc:	30 92 cd 00 	sts	0x00CD, r3
     d00:	40 92 ce 00 	sts	0x00CE, r4
     d04:	50 92 cf 00 	sts	0x00CF, r5
     d08:	b0 92 e1 00 	sts	0x00E1, r11
     d0c:	1a c0       	rjmp	.+52     	; 0xd42 <current_zero_cross_time+0x270>
	actual_current = ((5.00*current_adc[0])/1024.00)-average_current;
	if (actual_current>0)
	{
		for (i=1;i<number_of_samples;i++)
		{
			actual_current = ((5.00*current_adc[i])/1024.00)-average_current;
     d0e:	66 24       	eor	r6, r6
     d10:	63 94       	inc	r6
     d12:	71 2c       	mov	r7, r1
     d14:	03 c0       	rjmp	.+6      	; 0xd1c <current_zero_cross_time+0x24a>
	}
	else
	{
		for (i=1;i<number_of_samples;i++)
		{
			actual_current = ((5.00*current_adc[i])/1024.00)-average_current;
     d16:	66 24       	eor	r6, r6
     d18:	63 94       	inc	r6
     d1a:	71 2c       	mov	r7, r1
     d1c:	86 2d       	mov	r24, r6
     d1e:	97 2d       	mov	r25, r7
     d20:	10 c0       	rjmp	.+32     	; 0xd42 <current_zero_cross_time+0x270>
     d22:	0a ee       	ldi	r16, 0xEA	; 234
     d24:	10 e0       	ldi	r17, 0x00	; 0
{
	int index = 0;
	actual_current = ((5.00*current_adc[0])/1024.00)-average_current;
	if (actual_current>0)
	{
		for (i=1;i<number_of_samples;i++)
     d26:	c2 e0       	ldi	r28, 0x02	; 2
     d28:	d0 e0       	ldi	r29, 0x00	; 0
     d2a:	68 94       	set
     d2c:	55 24       	eor	r5, r5
     d2e:	51 f8       	bld	r5, 1
     d30:	3a cf       	rjmp	.-396    	; 0xba6 <current_zero_cross_time+0xd4>
     d32:	0a ee       	ldi	r16, 0xEA	; 234
     d34:	10 e0       	ldi	r17, 0x00	; 0
			
		}
	}
	else
	{
		for (i=1;i<number_of_samples;i++)
     d36:	c2 e0       	ldi	r28, 0x02	; 2
     d38:	d0 e0       	ldi	r29, 0x00	; 0
     d3a:	68 94       	set
     d3c:	bb 24       	eor	r11, r11
     d3e:	b1 f8       	bld	r11, 1
     d40:	a3 cf       	rjmp	.-186    	; 0xc88 <current_zero_cross_time+0x1b6>
			
		}
		
	}
	//return(index);
}
     d42:	df 91       	pop	r29
     d44:	cf 91       	pop	r28
     d46:	1f 91       	pop	r17
     d48:	0f 91       	pop	r16
     d4a:	ff 90       	pop	r15
     d4c:	ef 90       	pop	r14
     d4e:	df 90       	pop	r13
     d50:	cf 90       	pop	r12
     d52:	bf 90       	pop	r11
     d54:	af 90       	pop	r10
     d56:	9f 90       	pop	r9
     d58:	8f 90       	pop	r8
     d5a:	7f 90       	pop	r7
     d5c:	6f 90       	pop	r6
     d5e:	5f 90       	pop	r5
     d60:	4f 90       	pop	r4
     d62:	3f 90       	pop	r3
     d64:	2f 90       	pop	r2
     d66:	08 95       	ret

00000d68 <main>:
double power_factor=0,power_factor_2=0;
double average_volt=0,average_current=0,actual_volt=0,actual_current=0,Vrms=0,Irms=0,V_avg=0,I_avg=0,volt_square_sum=0,current_squared_sum=0,real_power=0;

int main(void)
{
	setup();
     d68:	0e 94 2c 01 	call	0x258	; 0x258 <setup>
    while(1)
    {
		//print_voltage_current();
		calculate_power_factor();
     d6c:	0e 94 3e 01 	call	0x27c	; 0x27c <calculate_power_factor>
		ADCSRA |=(1<<ADEN);
     d70:	37 9a       	sbi	0x06, 7	; 6
		TCNT1 = 0;
     d72:	1d bc       	out	0x2d, r1	; 45
     d74:	1c bc       	out	0x2c, r1	; 44
		index_volt = voltage_zero_cross_time();
     d76:	0e 94 28 04 	call	0x850	; 0x850 <voltage_zero_cross_time>
     d7a:	90 93 e5 00 	sts	0x00E5, r25
     d7e:	80 93 e4 00 	sts	0x00E4, r24
		index_current = current_zero_cross_time();
     d82:	0e 94 69 05 	call	0xad2	; 0xad2 <current_zero_cross_time>
     d86:	90 93 e3 00 	sts	0x00E3, r25
     d8a:	80 93 e2 00 	sts	0x00E2, r24
		ADCSRA &= ~(1<<ADEN);
     d8e:	37 98       	cbi	0x06, 7	; 6
     d90:	2f e7       	ldi	r18, 0x7F	; 127
     d92:	8d e8       	ldi	r24, 0x8D	; 141
     d94:	9b e5       	ldi	r25, 0x5B	; 91
     d96:	21 50       	subi	r18, 0x01	; 1
     d98:	80 40       	sbci	r24, 0x00	; 0
     d9a:	90 40       	sbci	r25, 0x00	; 0
     d9c:	e1 f7       	brne	.-8      	; 0xd96 <main+0x2e>
     d9e:	00 c0       	rjmp	.+0      	; 0xda0 <main+0x38>
     da0:	00 00       	nop
		_delay_ms(30000);
		ADCSRA |=(1<<ADEN);
     da2:	37 9a       	sbi	0x06, 7	; 6
     da4:	e3 cf       	rjmp	.-58     	; 0xd6c <main+0x4>

00000da6 <USARTInit>:
#include "usart.h"

void USARTInit(uint16_t ubrrvalue)
{
	//Setup q
	UQFront=UQEnd=-1;
     da6:	2f ef       	ldi	r18, 0xFF	; 255
     da8:	20 93 07 04 	sts	0x0407, r18
     dac:	20 93 06 04 	sts	0x0406, r18

	//Set Baud rate
	UBRRH=(unsigned char)(ubrrvalue>>8);
     db0:	90 bd       	out	0x20, r25	; 32
	UBRRL=(unsigned char)ubrrvalue;
     db2:	89 b9       	out	0x09, r24	; 9
	1 StopBit
	char size 8

	*/

	UCSRC=(1<<URSEL)|(3<<UCSZ0);
     db4:	86 e8       	ldi	r24, 0x86	; 134
     db6:	80 bd       	out	0x20, r24	; 32

	Enable The recevier and transmitter

	*/

	UCSRB=(1<<RXCIE)|(1<<RXEN)|(1<<TXEN);
     db8:	88 e9       	ldi	r24, 0x98	; 152
     dba:	8a b9       	out	0x0a, r24	; 10
	sei();
     dbc:	78 94       	sei
     dbe:	08 95       	ret

00000dc0 <__vector_13>:

}

//The USART ISR
ISR(USART_RXC_VECT)
{
     dc0:	1f 92       	push	r1
     dc2:	0f 92       	push	r0
     dc4:	0f b6       	in	r0, 0x3f	; 63
     dc6:	0f 92       	push	r0
     dc8:	11 24       	eor	r1, r1
     dca:	2f 93       	push	r18
     dcc:	3f 93       	push	r19
     dce:	4f 93       	push	r20
     dd0:	8f 93       	push	r24
     dd2:	9f 93       	push	r25
     dd4:	ef 93       	push	r30
     dd6:	ff 93       	push	r31
	//Read the data
	char data=UDR;
     dd8:	4c b1       	in	r20, 0x0c	; 12

	//Now add it to q

	if(((UQEnd==RECEIVE_BUFF_SIZE-1) && UQFront==0) || ((UQEnd+1)==UQFront))
     dda:	80 91 07 04 	lds	r24, 0x0407
     dde:	8f 33       	cpi	r24, 0x3F	; 63
     de0:	21 f4       	brne	.+8      	; 0xdea <__vector_13+0x2a>
     de2:	80 91 06 04 	lds	r24, 0x0406
     de6:	88 23       	and	r24, r24
     de8:	79 f0       	breq	.+30     	; 0xe08 <__vector_13+0x48>
     dea:	20 91 07 04 	lds	r18, 0x0407
     dee:	80 91 06 04 	lds	r24, 0x0406
     df2:	33 27       	eor	r19, r19
     df4:	27 fd       	sbrc	r18, 7
     df6:	30 95       	com	r19
     df8:	2f 5f       	subi	r18, 0xFF	; 255
     dfa:	3f 4f       	sbci	r19, 0xFF	; 255
     dfc:	99 27       	eor	r25, r25
     dfe:	87 fd       	sbrc	r24, 7
     e00:	90 95       	com	r25
     e02:	28 17       	cp	r18, r24
     e04:	39 07       	cpc	r19, r25
     e06:	59 f4       	brne	.+22     	; 0xe1e <__vector_13+0x5e>
	{
		//Q Full
		UQFront++;
     e08:	80 91 06 04 	lds	r24, 0x0406
     e0c:	8f 5f       	subi	r24, 0xFF	; 255
     e0e:	80 93 06 04 	sts	0x0406, r24
		if(UQFront==RECEIVE_BUFF_SIZE) UQFront=0;
     e12:	80 91 06 04 	lds	r24, 0x0406
     e16:	80 34       	cpi	r24, 0x40	; 64
     e18:	11 f4       	brne	.+4      	; 0xe1e <__vector_13+0x5e>
     e1a:	10 92 06 04 	sts	0x0406, r1
	}
	

	if(UQEnd==RECEIVE_BUFF_SIZE-1)
     e1e:	80 91 07 04 	lds	r24, 0x0407
     e22:	8f 33       	cpi	r24, 0x3F	; 63
     e24:	19 f4       	brne	.+6      	; 0xe2c <__vector_13+0x6c>
		UQEnd=0;
     e26:	10 92 07 04 	sts	0x0407, r1
     e2a:	05 c0       	rjmp	.+10     	; 0xe36 <__vector_13+0x76>
	else
		UQEnd++;
     e2c:	80 91 07 04 	lds	r24, 0x0407
     e30:	8f 5f       	subi	r24, 0xFF	; 255
     e32:	80 93 07 04 	sts	0x0407, r24


	URBuff[UQEnd]=data;
     e36:	e0 91 07 04 	lds	r30, 0x0407
     e3a:	ff 27       	eor	r31, r31
     e3c:	e7 fd       	sbrc	r30, 7
     e3e:	f0 95       	com	r31
     e40:	e8 5f       	subi	r30, 0xF8	; 248
     e42:	fb 4f       	sbci	r31, 0xFB	; 251
     e44:	40 83       	st	Z, r20

	if(UQFront==-1) UQFront=0;
     e46:	80 91 06 04 	lds	r24, 0x0406
     e4a:	8f 3f       	cpi	r24, 0xFF	; 255
     e4c:	11 f4       	brne	.+4      	; 0xe52 <__vector_13+0x92>
     e4e:	10 92 06 04 	sts	0x0406, r1

}
     e52:	ff 91       	pop	r31
     e54:	ef 91       	pop	r30
     e56:	9f 91       	pop	r25
     e58:	8f 91       	pop	r24
     e5a:	4f 91       	pop	r20
     e5c:	3f 91       	pop	r19
     e5e:	2f 91       	pop	r18
     e60:	0f 90       	pop	r0
     e62:	0f be       	out	0x3f, r0	; 63
     e64:	0f 90       	pop	r0
     e66:	1f 90       	pop	r1
     e68:	18 95       	reti

00000e6a <UWriteData>:
}

void UWriteData(char data)
{
	//Wait For Transmitter to become ready
	while(!(UCSRA & (1<<UDRE)));
     e6a:	5d 9b       	sbis	0x0b, 5	; 11
     e6c:	fe cf       	rjmp	.-4      	; 0xe6a <UWriteData>

	//Now write
	UDR=data;
     e6e:	8c b9       	out	0x0c, r24	; 12
     e70:	08 95       	ret

00000e72 <UWriteString>:
	else
		return 1;
}

void UWriteString(char *str)
{
     e72:	cf 93       	push	r28
     e74:	df 93       	push	r29
     e76:	ec 01       	movw	r28, r24
	while((*str)!='\0')
     e78:	88 81       	ld	r24, Y
     e7a:	88 23       	and	r24, r24
     e7c:	31 f0       	breq	.+12     	; 0xe8a <UWriteString+0x18>
     e7e:	21 96       	adiw	r28, 0x01	; 1
	{
		UWriteData(*str);
     e80:	0e 94 35 07 	call	0xe6a	; 0xe6a <UWriteData>
		return 1;
}

void UWriteString(char *str)
{
	while((*str)!='\0')
     e84:	89 91       	ld	r24, Y+
     e86:	81 11       	cpse	r24, r1
     e88:	fb cf       	rjmp	.-10     	; 0xe80 <UWriteString+0xe>
	{
		UWriteData(*str);
		str++;
	}

	UWriteData('\0');
     e8a:	80 e0       	ldi	r24, 0x00	; 0
     e8c:	0e 94 35 07 	call	0xe6a	; 0xe6a <UWriteData>
}
     e90:	df 91       	pop	r29
     e92:	cf 91       	pop	r28
     e94:	08 95       	ret

00000e96 <print_double>:
	itoa(number,string_integer,10);
	UWriteString(string_integer);
}

void print_double(double number,uint8_t digit_before_dot,uint8_t digit_after_dot)
{
     e96:	0f 93       	push	r16
     e98:	1f 93       	push	r17
     e9a:	cf 93       	push	r28
     e9c:	df 93       	push	r29
     e9e:	cd b7       	in	r28, 0x3d	; 61
     ea0:	de b7       	in	r29, 0x3e	; 62
     ea2:	2a 97       	sbiw	r28, 0x0a	; 10
     ea4:	0f b6       	in	r0, 0x3f	; 63
     ea6:	f8 94       	cli
     ea8:	de bf       	out	0x3e, r29	; 62
     eaa:	0f be       	out	0x3f, r0	; 63
     eac:	cd bf       	out	0x3d, r28	; 61
	char string2[10];
	dtostrf(number,digit_before_dot,digit_after_dot,string2);
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	50 e0       	ldi	r21, 0x00	; 0
     eb2:	8e 01       	movw	r16, r28
     eb4:	0f 5f       	subi	r16, 0xFF	; 255
     eb6:	1f 4f       	sbci	r17, 0xFF	; 255
     eb8:	0e 94 ad 09 	call	0x135a	; 0x135a <dtostrf>
	UWriteString(string2);
     ebc:	c8 01       	movw	r24, r16
     ebe:	0e 94 39 07 	call	0xe72	; 0xe72 <UWriteString>
     ec2:	2a 96       	adiw	r28, 0x0a	; 10
     ec4:	0f b6       	in	r0, 0x3f	; 63
     ec6:	f8 94       	cli
     ec8:	de bf       	out	0x3e, r29	; 62
     eca:	0f be       	out	0x3f, r0	; 63
     ecc:	cd bf       	out	0x3d, r28	; 61
     ece:	df 91       	pop	r29
     ed0:	cf 91       	pop	r28
     ed2:	1f 91       	pop	r17
     ed4:	0f 91       	pop	r16
     ed6:	08 95       	ret

00000ed8 <__subsf3>:
     ed8:	50 58       	subi	r21, 0x80	; 128

00000eda <__addsf3>:
     eda:	bb 27       	eor	r27, r27
     edc:	aa 27       	eor	r26, r26
     ede:	0e d0       	rcall	.+28     	; 0xefc <__addsf3x>
     ee0:	44 c1       	rjmp	.+648    	; 0x116a <__fp_round>
     ee2:	35 d1       	rcall	.+618    	; 0x114e <__fp_pscA>
     ee4:	30 f0       	brcs	.+12     	; 0xef2 <__addsf3+0x18>
     ee6:	3a d1       	rcall	.+628    	; 0x115c <__fp_pscB>
     ee8:	20 f0       	brcs	.+8      	; 0xef2 <__addsf3+0x18>
     eea:	31 f4       	brne	.+12     	; 0xef8 <__addsf3+0x1e>
     eec:	9f 3f       	cpi	r25, 0xFF	; 255
     eee:	11 f4       	brne	.+4      	; 0xef4 <__addsf3+0x1a>
     ef0:	1e f4       	brtc	.+6      	; 0xef8 <__addsf3+0x1e>
     ef2:	2a c1       	rjmp	.+596    	; 0x1148 <__fp_nan>
     ef4:	0e f4       	brtc	.+2      	; 0xef8 <__addsf3+0x1e>
     ef6:	e0 95       	com	r30
     ef8:	e7 fb       	bst	r30, 7
     efa:	20 c1       	rjmp	.+576    	; 0x113c <__fp_inf>

00000efc <__addsf3x>:
     efc:	e9 2f       	mov	r30, r25
     efe:	46 d1       	rcall	.+652    	; 0x118c <__fp_split3>
     f00:	80 f3       	brcs	.-32     	; 0xee2 <__addsf3+0x8>
     f02:	ba 17       	cp	r27, r26
     f04:	62 07       	cpc	r22, r18
     f06:	73 07       	cpc	r23, r19
     f08:	84 07       	cpc	r24, r20
     f0a:	95 07       	cpc	r25, r21
     f0c:	18 f0       	brcs	.+6      	; 0xf14 <__addsf3x+0x18>
     f0e:	71 f4       	brne	.+28     	; 0xf2c <__addsf3x+0x30>
     f10:	9e f5       	brtc	.+102    	; 0xf78 <__addsf3x+0x7c>
     f12:	5e c1       	rjmp	.+700    	; 0x11d0 <__fp_zero>
     f14:	0e f4       	brtc	.+2      	; 0xf18 <__addsf3x+0x1c>
     f16:	e0 95       	com	r30
     f18:	0b 2e       	mov	r0, r27
     f1a:	ba 2f       	mov	r27, r26
     f1c:	a0 2d       	mov	r26, r0
     f1e:	0b 01       	movw	r0, r22
     f20:	b9 01       	movw	r22, r18
     f22:	90 01       	movw	r18, r0
     f24:	0c 01       	movw	r0, r24
     f26:	ca 01       	movw	r24, r20
     f28:	a0 01       	movw	r20, r0
     f2a:	11 24       	eor	r1, r1
     f2c:	ff 27       	eor	r31, r31
     f2e:	59 1b       	sub	r21, r25
     f30:	99 f0       	breq	.+38     	; 0xf58 <__addsf3x+0x5c>
     f32:	59 3f       	cpi	r21, 0xF9	; 249
     f34:	50 f4       	brcc	.+20     	; 0xf4a <__addsf3x+0x4e>
     f36:	50 3e       	cpi	r21, 0xE0	; 224
     f38:	68 f1       	brcs	.+90     	; 0xf94 <__addsf3x+0x98>
     f3a:	1a 16       	cp	r1, r26
     f3c:	f0 40       	sbci	r31, 0x00	; 0
     f3e:	a2 2f       	mov	r26, r18
     f40:	23 2f       	mov	r18, r19
     f42:	34 2f       	mov	r19, r20
     f44:	44 27       	eor	r20, r20
     f46:	58 5f       	subi	r21, 0xF8	; 248
     f48:	f3 cf       	rjmp	.-26     	; 0xf30 <__addsf3x+0x34>
     f4a:	46 95       	lsr	r20
     f4c:	37 95       	ror	r19
     f4e:	27 95       	ror	r18
     f50:	a7 95       	ror	r26
     f52:	f0 40       	sbci	r31, 0x00	; 0
     f54:	53 95       	inc	r21
     f56:	c9 f7       	brne	.-14     	; 0xf4a <__addsf3x+0x4e>
     f58:	7e f4       	brtc	.+30     	; 0xf78 <__addsf3x+0x7c>
     f5a:	1f 16       	cp	r1, r31
     f5c:	ba 0b       	sbc	r27, r26
     f5e:	62 0b       	sbc	r22, r18
     f60:	73 0b       	sbc	r23, r19
     f62:	84 0b       	sbc	r24, r20
     f64:	ba f0       	brmi	.+46     	; 0xf94 <__addsf3x+0x98>
     f66:	91 50       	subi	r25, 0x01	; 1
     f68:	a1 f0       	breq	.+40     	; 0xf92 <__addsf3x+0x96>
     f6a:	ff 0f       	add	r31, r31
     f6c:	bb 1f       	adc	r27, r27
     f6e:	66 1f       	adc	r22, r22
     f70:	77 1f       	adc	r23, r23
     f72:	88 1f       	adc	r24, r24
     f74:	c2 f7       	brpl	.-16     	; 0xf66 <__addsf3x+0x6a>
     f76:	0e c0       	rjmp	.+28     	; 0xf94 <__addsf3x+0x98>
     f78:	ba 0f       	add	r27, r26
     f7a:	62 1f       	adc	r22, r18
     f7c:	73 1f       	adc	r23, r19
     f7e:	84 1f       	adc	r24, r20
     f80:	48 f4       	brcc	.+18     	; 0xf94 <__addsf3x+0x98>
     f82:	87 95       	ror	r24
     f84:	77 95       	ror	r23
     f86:	67 95       	ror	r22
     f88:	b7 95       	ror	r27
     f8a:	f7 95       	ror	r31
     f8c:	9e 3f       	cpi	r25, 0xFE	; 254
     f8e:	08 f0       	brcs	.+2      	; 0xf92 <__addsf3x+0x96>
     f90:	b3 cf       	rjmp	.-154    	; 0xef8 <__addsf3+0x1e>
     f92:	93 95       	inc	r25
     f94:	88 0f       	add	r24, r24
     f96:	08 f0       	brcs	.+2      	; 0xf9a <__addsf3x+0x9e>
     f98:	99 27       	eor	r25, r25
     f9a:	ee 0f       	add	r30, r30
     f9c:	97 95       	ror	r25
     f9e:	87 95       	ror	r24
     fa0:	08 95       	ret

00000fa2 <__cmpsf2>:
     fa2:	a8 d0       	rcall	.+336    	; 0x10f4 <__fp_cmp>
     fa4:	08 f4       	brcc	.+2      	; 0xfa8 <__cmpsf2+0x6>
     fa6:	81 e0       	ldi	r24, 0x01	; 1
     fa8:	08 95       	ret

00000faa <__divsf3>:
     faa:	0c d0       	rcall	.+24     	; 0xfc4 <__divsf3x>
     fac:	de c0       	rjmp	.+444    	; 0x116a <__fp_round>
     fae:	d6 d0       	rcall	.+428    	; 0x115c <__fp_pscB>
     fb0:	40 f0       	brcs	.+16     	; 0xfc2 <__divsf3+0x18>
     fb2:	cd d0       	rcall	.+410    	; 0x114e <__fp_pscA>
     fb4:	30 f0       	brcs	.+12     	; 0xfc2 <__divsf3+0x18>
     fb6:	21 f4       	brne	.+8      	; 0xfc0 <__divsf3+0x16>
     fb8:	5f 3f       	cpi	r21, 0xFF	; 255
     fba:	19 f0       	breq	.+6      	; 0xfc2 <__divsf3+0x18>
     fbc:	bf c0       	rjmp	.+382    	; 0x113c <__fp_inf>
     fbe:	51 11       	cpse	r21, r1
     fc0:	08 c1       	rjmp	.+528    	; 0x11d2 <__fp_szero>
     fc2:	c2 c0       	rjmp	.+388    	; 0x1148 <__fp_nan>

00000fc4 <__divsf3x>:
     fc4:	e3 d0       	rcall	.+454    	; 0x118c <__fp_split3>
     fc6:	98 f3       	brcs	.-26     	; 0xfae <__divsf3+0x4>

00000fc8 <__divsf3_pse>:
     fc8:	99 23       	and	r25, r25
     fca:	c9 f3       	breq	.-14     	; 0xfbe <__divsf3+0x14>
     fcc:	55 23       	and	r21, r21
     fce:	b1 f3       	breq	.-20     	; 0xfbc <__divsf3+0x12>
     fd0:	95 1b       	sub	r25, r21
     fd2:	55 0b       	sbc	r21, r21
     fd4:	bb 27       	eor	r27, r27
     fd6:	aa 27       	eor	r26, r26
     fd8:	62 17       	cp	r22, r18
     fda:	73 07       	cpc	r23, r19
     fdc:	84 07       	cpc	r24, r20
     fde:	38 f0       	brcs	.+14     	; 0xfee <__divsf3_pse+0x26>
     fe0:	9f 5f       	subi	r25, 0xFF	; 255
     fe2:	5f 4f       	sbci	r21, 0xFF	; 255
     fe4:	22 0f       	add	r18, r18
     fe6:	33 1f       	adc	r19, r19
     fe8:	44 1f       	adc	r20, r20
     fea:	aa 1f       	adc	r26, r26
     fec:	a9 f3       	breq	.-22     	; 0xfd8 <__divsf3_pse+0x10>
     fee:	33 d0       	rcall	.+102    	; 0x1056 <__divsf3_pse+0x8e>
     ff0:	0e 2e       	mov	r0, r30
     ff2:	3a f0       	brmi	.+14     	; 0x1002 <__divsf3_pse+0x3a>
     ff4:	e0 e8       	ldi	r30, 0x80	; 128
     ff6:	30 d0       	rcall	.+96     	; 0x1058 <__divsf3_pse+0x90>
     ff8:	91 50       	subi	r25, 0x01	; 1
     ffa:	50 40       	sbci	r21, 0x00	; 0
     ffc:	e6 95       	lsr	r30
     ffe:	00 1c       	adc	r0, r0
    1000:	ca f7       	brpl	.-14     	; 0xff4 <__divsf3_pse+0x2c>
    1002:	29 d0       	rcall	.+82     	; 0x1056 <__divsf3_pse+0x8e>
    1004:	fe 2f       	mov	r31, r30
    1006:	27 d0       	rcall	.+78     	; 0x1056 <__divsf3_pse+0x8e>
    1008:	66 0f       	add	r22, r22
    100a:	77 1f       	adc	r23, r23
    100c:	88 1f       	adc	r24, r24
    100e:	bb 1f       	adc	r27, r27
    1010:	26 17       	cp	r18, r22
    1012:	37 07       	cpc	r19, r23
    1014:	48 07       	cpc	r20, r24
    1016:	ab 07       	cpc	r26, r27
    1018:	b0 e8       	ldi	r27, 0x80	; 128
    101a:	09 f0       	breq	.+2      	; 0x101e <__divsf3_pse+0x56>
    101c:	bb 0b       	sbc	r27, r27
    101e:	80 2d       	mov	r24, r0
    1020:	bf 01       	movw	r22, r30
    1022:	ff 27       	eor	r31, r31
    1024:	93 58       	subi	r25, 0x83	; 131
    1026:	5f 4f       	sbci	r21, 0xFF	; 255
    1028:	2a f0       	brmi	.+10     	; 0x1034 <__divsf3_pse+0x6c>
    102a:	9e 3f       	cpi	r25, 0xFE	; 254
    102c:	51 05       	cpc	r21, r1
    102e:	68 f0       	brcs	.+26     	; 0x104a <__divsf3_pse+0x82>
    1030:	85 c0       	rjmp	.+266    	; 0x113c <__fp_inf>
    1032:	cf c0       	rjmp	.+414    	; 0x11d2 <__fp_szero>
    1034:	5f 3f       	cpi	r21, 0xFF	; 255
    1036:	ec f3       	brlt	.-6      	; 0x1032 <__divsf3_pse+0x6a>
    1038:	98 3e       	cpi	r25, 0xE8	; 232
    103a:	dc f3       	brlt	.-10     	; 0x1032 <__divsf3_pse+0x6a>
    103c:	86 95       	lsr	r24
    103e:	77 95       	ror	r23
    1040:	67 95       	ror	r22
    1042:	b7 95       	ror	r27
    1044:	f7 95       	ror	r31
    1046:	9f 5f       	subi	r25, 0xFF	; 255
    1048:	c9 f7       	brne	.-14     	; 0x103c <__divsf3_pse+0x74>
    104a:	88 0f       	add	r24, r24
    104c:	91 1d       	adc	r25, r1
    104e:	96 95       	lsr	r25
    1050:	87 95       	ror	r24
    1052:	97 f9       	bld	r25, 7
    1054:	08 95       	ret
    1056:	e1 e0       	ldi	r30, 0x01	; 1
    1058:	66 0f       	add	r22, r22
    105a:	77 1f       	adc	r23, r23
    105c:	88 1f       	adc	r24, r24
    105e:	bb 1f       	adc	r27, r27
    1060:	62 17       	cp	r22, r18
    1062:	73 07       	cpc	r23, r19
    1064:	84 07       	cpc	r24, r20
    1066:	ba 07       	cpc	r27, r26
    1068:	20 f0       	brcs	.+8      	; 0x1072 <__divsf3_pse+0xaa>
    106a:	62 1b       	sub	r22, r18
    106c:	73 0b       	sbc	r23, r19
    106e:	84 0b       	sbc	r24, r20
    1070:	ba 0b       	sbc	r27, r26
    1072:	ee 1f       	adc	r30, r30
    1074:	88 f7       	brcc	.-30     	; 0x1058 <__divsf3_pse+0x90>
    1076:	e0 95       	com	r30
    1078:	08 95       	ret

0000107a <__floatunsisf>:
    107a:	e8 94       	clt
    107c:	09 c0       	rjmp	.+18     	; 0x1090 <__floatsisf+0x12>

0000107e <__floatsisf>:
    107e:	97 fb       	bst	r25, 7
    1080:	3e f4       	brtc	.+14     	; 0x1090 <__floatsisf+0x12>
    1082:	90 95       	com	r25
    1084:	80 95       	com	r24
    1086:	70 95       	com	r23
    1088:	61 95       	neg	r22
    108a:	7f 4f       	sbci	r23, 0xFF	; 255
    108c:	8f 4f       	sbci	r24, 0xFF	; 255
    108e:	9f 4f       	sbci	r25, 0xFF	; 255
    1090:	99 23       	and	r25, r25
    1092:	a9 f0       	breq	.+42     	; 0x10be <__floatsisf+0x40>
    1094:	f9 2f       	mov	r31, r25
    1096:	96 e9       	ldi	r25, 0x96	; 150
    1098:	bb 27       	eor	r27, r27
    109a:	93 95       	inc	r25
    109c:	f6 95       	lsr	r31
    109e:	87 95       	ror	r24
    10a0:	77 95       	ror	r23
    10a2:	67 95       	ror	r22
    10a4:	b7 95       	ror	r27
    10a6:	f1 11       	cpse	r31, r1
    10a8:	f8 cf       	rjmp	.-16     	; 0x109a <__floatsisf+0x1c>
    10aa:	fa f4       	brpl	.+62     	; 0x10ea <__floatsisf+0x6c>
    10ac:	bb 0f       	add	r27, r27
    10ae:	11 f4       	brne	.+4      	; 0x10b4 <__floatsisf+0x36>
    10b0:	60 ff       	sbrs	r22, 0
    10b2:	1b c0       	rjmp	.+54     	; 0x10ea <__floatsisf+0x6c>
    10b4:	6f 5f       	subi	r22, 0xFF	; 255
    10b6:	7f 4f       	sbci	r23, 0xFF	; 255
    10b8:	8f 4f       	sbci	r24, 0xFF	; 255
    10ba:	9f 4f       	sbci	r25, 0xFF	; 255
    10bc:	16 c0       	rjmp	.+44     	; 0x10ea <__floatsisf+0x6c>
    10be:	88 23       	and	r24, r24
    10c0:	11 f0       	breq	.+4      	; 0x10c6 <__floatsisf+0x48>
    10c2:	96 e9       	ldi	r25, 0x96	; 150
    10c4:	11 c0       	rjmp	.+34     	; 0x10e8 <__floatsisf+0x6a>
    10c6:	77 23       	and	r23, r23
    10c8:	21 f0       	breq	.+8      	; 0x10d2 <__floatsisf+0x54>
    10ca:	9e e8       	ldi	r25, 0x8E	; 142
    10cc:	87 2f       	mov	r24, r23
    10ce:	76 2f       	mov	r23, r22
    10d0:	05 c0       	rjmp	.+10     	; 0x10dc <__floatsisf+0x5e>
    10d2:	66 23       	and	r22, r22
    10d4:	71 f0       	breq	.+28     	; 0x10f2 <__floatsisf+0x74>
    10d6:	96 e8       	ldi	r25, 0x86	; 134
    10d8:	86 2f       	mov	r24, r22
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	60 e0       	ldi	r22, 0x00	; 0
    10de:	2a f0       	brmi	.+10     	; 0x10ea <__floatsisf+0x6c>
    10e0:	9a 95       	dec	r25
    10e2:	66 0f       	add	r22, r22
    10e4:	77 1f       	adc	r23, r23
    10e6:	88 1f       	adc	r24, r24
    10e8:	da f7       	brpl	.-10     	; 0x10e0 <__floatsisf+0x62>
    10ea:	88 0f       	add	r24, r24
    10ec:	96 95       	lsr	r25
    10ee:	87 95       	ror	r24
    10f0:	97 f9       	bld	r25, 7
    10f2:	08 95       	ret

000010f4 <__fp_cmp>:
    10f4:	99 0f       	add	r25, r25
    10f6:	00 08       	sbc	r0, r0
    10f8:	55 0f       	add	r21, r21
    10fa:	aa 0b       	sbc	r26, r26
    10fc:	e0 e8       	ldi	r30, 0x80	; 128
    10fe:	fe ef       	ldi	r31, 0xFE	; 254
    1100:	16 16       	cp	r1, r22
    1102:	17 06       	cpc	r1, r23
    1104:	e8 07       	cpc	r30, r24
    1106:	f9 07       	cpc	r31, r25
    1108:	c0 f0       	brcs	.+48     	; 0x113a <__fp_cmp+0x46>
    110a:	12 16       	cp	r1, r18
    110c:	13 06       	cpc	r1, r19
    110e:	e4 07       	cpc	r30, r20
    1110:	f5 07       	cpc	r31, r21
    1112:	98 f0       	brcs	.+38     	; 0x113a <__fp_cmp+0x46>
    1114:	62 1b       	sub	r22, r18
    1116:	73 0b       	sbc	r23, r19
    1118:	84 0b       	sbc	r24, r20
    111a:	95 0b       	sbc	r25, r21
    111c:	39 f4       	brne	.+14     	; 0x112c <__fp_cmp+0x38>
    111e:	0a 26       	eor	r0, r26
    1120:	61 f0       	breq	.+24     	; 0x113a <__fp_cmp+0x46>
    1122:	23 2b       	or	r18, r19
    1124:	24 2b       	or	r18, r20
    1126:	25 2b       	or	r18, r21
    1128:	21 f4       	brne	.+8      	; 0x1132 <__fp_cmp+0x3e>
    112a:	08 95       	ret
    112c:	0a 26       	eor	r0, r26
    112e:	09 f4       	brne	.+2      	; 0x1132 <__fp_cmp+0x3e>
    1130:	a1 40       	sbci	r26, 0x01	; 1
    1132:	a6 95       	lsr	r26
    1134:	8f ef       	ldi	r24, 0xFF	; 255
    1136:	81 1d       	adc	r24, r1
    1138:	81 1d       	adc	r24, r1
    113a:	08 95       	ret

0000113c <__fp_inf>:
    113c:	97 f9       	bld	r25, 7
    113e:	9f 67       	ori	r25, 0x7F	; 127
    1140:	80 e8       	ldi	r24, 0x80	; 128
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	60 e0       	ldi	r22, 0x00	; 0
    1146:	08 95       	ret

00001148 <__fp_nan>:
    1148:	9f ef       	ldi	r25, 0xFF	; 255
    114a:	80 ec       	ldi	r24, 0xC0	; 192
    114c:	08 95       	ret

0000114e <__fp_pscA>:
    114e:	00 24       	eor	r0, r0
    1150:	0a 94       	dec	r0
    1152:	16 16       	cp	r1, r22
    1154:	17 06       	cpc	r1, r23
    1156:	18 06       	cpc	r1, r24
    1158:	09 06       	cpc	r0, r25
    115a:	08 95       	ret

0000115c <__fp_pscB>:
    115c:	00 24       	eor	r0, r0
    115e:	0a 94       	dec	r0
    1160:	12 16       	cp	r1, r18
    1162:	13 06       	cpc	r1, r19
    1164:	14 06       	cpc	r1, r20
    1166:	05 06       	cpc	r0, r21
    1168:	08 95       	ret

0000116a <__fp_round>:
    116a:	09 2e       	mov	r0, r25
    116c:	03 94       	inc	r0
    116e:	00 0c       	add	r0, r0
    1170:	11 f4       	brne	.+4      	; 0x1176 <__fp_round+0xc>
    1172:	88 23       	and	r24, r24
    1174:	52 f0       	brmi	.+20     	; 0x118a <__fp_round+0x20>
    1176:	bb 0f       	add	r27, r27
    1178:	40 f4       	brcc	.+16     	; 0x118a <__fp_round+0x20>
    117a:	bf 2b       	or	r27, r31
    117c:	11 f4       	brne	.+4      	; 0x1182 <__fp_round+0x18>
    117e:	60 ff       	sbrs	r22, 0
    1180:	04 c0       	rjmp	.+8      	; 0x118a <__fp_round+0x20>
    1182:	6f 5f       	subi	r22, 0xFF	; 255
    1184:	7f 4f       	sbci	r23, 0xFF	; 255
    1186:	8f 4f       	sbci	r24, 0xFF	; 255
    1188:	9f 4f       	sbci	r25, 0xFF	; 255
    118a:	08 95       	ret

0000118c <__fp_split3>:
    118c:	57 fd       	sbrc	r21, 7
    118e:	90 58       	subi	r25, 0x80	; 128
    1190:	44 0f       	add	r20, r20
    1192:	55 1f       	adc	r21, r21
    1194:	59 f0       	breq	.+22     	; 0x11ac <__fp_splitA+0x10>
    1196:	5f 3f       	cpi	r21, 0xFF	; 255
    1198:	71 f0       	breq	.+28     	; 0x11b6 <__fp_splitA+0x1a>
    119a:	47 95       	ror	r20

0000119c <__fp_splitA>:
    119c:	88 0f       	add	r24, r24
    119e:	97 fb       	bst	r25, 7
    11a0:	99 1f       	adc	r25, r25
    11a2:	61 f0       	breq	.+24     	; 0x11bc <__fp_splitA+0x20>
    11a4:	9f 3f       	cpi	r25, 0xFF	; 255
    11a6:	79 f0       	breq	.+30     	; 0x11c6 <__fp_splitA+0x2a>
    11a8:	87 95       	ror	r24
    11aa:	08 95       	ret
    11ac:	12 16       	cp	r1, r18
    11ae:	13 06       	cpc	r1, r19
    11b0:	14 06       	cpc	r1, r20
    11b2:	55 1f       	adc	r21, r21
    11b4:	f2 cf       	rjmp	.-28     	; 0x119a <__fp_split3+0xe>
    11b6:	46 95       	lsr	r20
    11b8:	f1 df       	rcall	.-30     	; 0x119c <__fp_splitA>
    11ba:	08 c0       	rjmp	.+16     	; 0x11cc <__fp_splitA+0x30>
    11bc:	16 16       	cp	r1, r22
    11be:	17 06       	cpc	r1, r23
    11c0:	18 06       	cpc	r1, r24
    11c2:	99 1f       	adc	r25, r25
    11c4:	f1 cf       	rjmp	.-30     	; 0x11a8 <__fp_splitA+0xc>
    11c6:	86 95       	lsr	r24
    11c8:	71 05       	cpc	r23, r1
    11ca:	61 05       	cpc	r22, r1
    11cc:	08 94       	sec
    11ce:	08 95       	ret

000011d0 <__fp_zero>:
    11d0:	e8 94       	clt

000011d2 <__fp_szero>:
    11d2:	bb 27       	eor	r27, r27
    11d4:	66 27       	eor	r22, r22
    11d6:	77 27       	eor	r23, r23
    11d8:	cb 01       	movw	r24, r22
    11da:	97 f9       	bld	r25, 7
    11dc:	08 95       	ret

000011de <__gesf2>:
    11de:	8a df       	rcall	.-236    	; 0x10f4 <__fp_cmp>
    11e0:	08 f4       	brcc	.+2      	; 0x11e4 <__gesf2+0x6>
    11e2:	8f ef       	ldi	r24, 0xFF	; 255
    11e4:	08 95       	ret

000011e6 <__mulsf3>:
    11e6:	0b d0       	rcall	.+22     	; 0x11fe <__mulsf3x>
    11e8:	c0 cf       	rjmp	.-128    	; 0x116a <__fp_round>
    11ea:	b1 df       	rcall	.-158    	; 0x114e <__fp_pscA>
    11ec:	28 f0       	brcs	.+10     	; 0x11f8 <__mulsf3+0x12>
    11ee:	b6 df       	rcall	.-148    	; 0x115c <__fp_pscB>
    11f0:	18 f0       	brcs	.+6      	; 0x11f8 <__mulsf3+0x12>
    11f2:	95 23       	and	r25, r21
    11f4:	09 f0       	breq	.+2      	; 0x11f8 <__mulsf3+0x12>
    11f6:	a2 cf       	rjmp	.-188    	; 0x113c <__fp_inf>
    11f8:	a7 cf       	rjmp	.-178    	; 0x1148 <__fp_nan>
    11fa:	11 24       	eor	r1, r1
    11fc:	ea cf       	rjmp	.-44     	; 0x11d2 <__fp_szero>

000011fe <__mulsf3x>:
    11fe:	c6 df       	rcall	.-116    	; 0x118c <__fp_split3>
    1200:	a0 f3       	brcs	.-24     	; 0x11ea <__mulsf3+0x4>

00001202 <__mulsf3_pse>:
    1202:	95 9f       	mul	r25, r21
    1204:	d1 f3       	breq	.-12     	; 0x11fa <__mulsf3+0x14>
    1206:	95 0f       	add	r25, r21
    1208:	50 e0       	ldi	r21, 0x00	; 0
    120a:	55 1f       	adc	r21, r21
    120c:	62 9f       	mul	r22, r18
    120e:	f0 01       	movw	r30, r0
    1210:	72 9f       	mul	r23, r18
    1212:	bb 27       	eor	r27, r27
    1214:	f0 0d       	add	r31, r0
    1216:	b1 1d       	adc	r27, r1
    1218:	63 9f       	mul	r22, r19
    121a:	aa 27       	eor	r26, r26
    121c:	f0 0d       	add	r31, r0
    121e:	b1 1d       	adc	r27, r1
    1220:	aa 1f       	adc	r26, r26
    1222:	64 9f       	mul	r22, r20
    1224:	66 27       	eor	r22, r22
    1226:	b0 0d       	add	r27, r0
    1228:	a1 1d       	adc	r26, r1
    122a:	66 1f       	adc	r22, r22
    122c:	82 9f       	mul	r24, r18
    122e:	22 27       	eor	r18, r18
    1230:	b0 0d       	add	r27, r0
    1232:	a1 1d       	adc	r26, r1
    1234:	62 1f       	adc	r22, r18
    1236:	73 9f       	mul	r23, r19
    1238:	b0 0d       	add	r27, r0
    123a:	a1 1d       	adc	r26, r1
    123c:	62 1f       	adc	r22, r18
    123e:	83 9f       	mul	r24, r19
    1240:	a0 0d       	add	r26, r0
    1242:	61 1d       	adc	r22, r1
    1244:	22 1f       	adc	r18, r18
    1246:	74 9f       	mul	r23, r20
    1248:	33 27       	eor	r19, r19
    124a:	a0 0d       	add	r26, r0
    124c:	61 1d       	adc	r22, r1
    124e:	23 1f       	adc	r18, r19
    1250:	84 9f       	mul	r24, r20
    1252:	60 0d       	add	r22, r0
    1254:	21 1d       	adc	r18, r1
    1256:	82 2f       	mov	r24, r18
    1258:	76 2f       	mov	r23, r22
    125a:	6a 2f       	mov	r22, r26
    125c:	11 24       	eor	r1, r1
    125e:	9f 57       	subi	r25, 0x7F	; 127
    1260:	50 40       	sbci	r21, 0x00	; 0
    1262:	8a f0       	brmi	.+34     	; 0x1286 <__mulsf3_pse+0x84>
    1264:	e1 f0       	breq	.+56     	; 0x129e <__mulsf3_pse+0x9c>
    1266:	88 23       	and	r24, r24
    1268:	4a f0       	brmi	.+18     	; 0x127c <__mulsf3_pse+0x7a>
    126a:	ee 0f       	add	r30, r30
    126c:	ff 1f       	adc	r31, r31
    126e:	bb 1f       	adc	r27, r27
    1270:	66 1f       	adc	r22, r22
    1272:	77 1f       	adc	r23, r23
    1274:	88 1f       	adc	r24, r24
    1276:	91 50       	subi	r25, 0x01	; 1
    1278:	50 40       	sbci	r21, 0x00	; 0
    127a:	a9 f7       	brne	.-22     	; 0x1266 <__mulsf3_pse+0x64>
    127c:	9e 3f       	cpi	r25, 0xFE	; 254
    127e:	51 05       	cpc	r21, r1
    1280:	70 f0       	brcs	.+28     	; 0x129e <__mulsf3_pse+0x9c>
    1282:	5c cf       	rjmp	.-328    	; 0x113c <__fp_inf>
    1284:	a6 cf       	rjmp	.-180    	; 0x11d2 <__fp_szero>
    1286:	5f 3f       	cpi	r21, 0xFF	; 255
    1288:	ec f3       	brlt	.-6      	; 0x1284 <__mulsf3_pse+0x82>
    128a:	98 3e       	cpi	r25, 0xE8	; 232
    128c:	dc f3       	brlt	.-10     	; 0x1284 <__mulsf3_pse+0x82>
    128e:	86 95       	lsr	r24
    1290:	77 95       	ror	r23
    1292:	67 95       	ror	r22
    1294:	b7 95       	ror	r27
    1296:	f7 95       	ror	r31
    1298:	e7 95       	ror	r30
    129a:	9f 5f       	subi	r25, 0xFF	; 255
    129c:	c1 f7       	brne	.-16     	; 0x128e <__mulsf3_pse+0x8c>
    129e:	fe 2b       	or	r31, r30
    12a0:	88 0f       	add	r24, r24
    12a2:	91 1d       	adc	r25, r1
    12a4:	96 95       	lsr	r25
    12a6:	87 95       	ror	r24
    12a8:	97 f9       	bld	r25, 7
    12aa:	08 95       	ret
    12ac:	11 f4       	brne	.+4      	; 0x12b2 <__mulsf3_pse+0xb0>
    12ae:	0e f4       	brtc	.+2      	; 0x12b2 <__mulsf3_pse+0xb0>
    12b0:	4b cf       	rjmp	.-362    	; 0x1148 <__fp_nan>
    12b2:	3e c0       	rjmp	.+124    	; 0x1330 <__fp_mpack>

000012b4 <sqrt>:
    12b4:	73 df       	rcall	.-282    	; 0x119c <__fp_splitA>
    12b6:	d0 f3       	brcs	.-12     	; 0x12ac <__mulsf3_pse+0xaa>
    12b8:	99 23       	and	r25, r25
    12ba:	d9 f3       	breq	.-10     	; 0x12b2 <__mulsf3_pse+0xb0>
    12bc:	ce f3       	brts	.-14     	; 0x12b0 <__mulsf3_pse+0xae>
    12be:	9f 57       	subi	r25, 0x7F	; 127
    12c0:	55 0b       	sbc	r21, r21
    12c2:	87 ff       	sbrs	r24, 7
    12c4:	43 d0       	rcall	.+134    	; 0x134c <__fp_norm2>
    12c6:	00 24       	eor	r0, r0
    12c8:	a0 e6       	ldi	r26, 0x60	; 96
    12ca:	40 ea       	ldi	r20, 0xA0	; 160
    12cc:	90 01       	movw	r18, r0
    12ce:	80 58       	subi	r24, 0x80	; 128
    12d0:	56 95       	lsr	r21
    12d2:	97 95       	ror	r25
    12d4:	28 f4       	brcc	.+10     	; 0x12e0 <sqrt+0x2c>
    12d6:	80 5c       	subi	r24, 0xC0	; 192
    12d8:	66 0f       	add	r22, r22
    12da:	77 1f       	adc	r23, r23
    12dc:	88 1f       	adc	r24, r24
    12de:	20 f0       	brcs	.+8      	; 0x12e8 <sqrt+0x34>
    12e0:	26 17       	cp	r18, r22
    12e2:	37 07       	cpc	r19, r23
    12e4:	48 07       	cpc	r20, r24
    12e6:	30 f4       	brcc	.+12     	; 0x12f4 <sqrt+0x40>
    12e8:	62 1b       	sub	r22, r18
    12ea:	73 0b       	sbc	r23, r19
    12ec:	84 0b       	sbc	r24, r20
    12ee:	20 29       	or	r18, r0
    12f0:	31 29       	or	r19, r1
    12f2:	4a 2b       	or	r20, r26
    12f4:	a6 95       	lsr	r26
    12f6:	17 94       	ror	r1
    12f8:	07 94       	ror	r0
    12fa:	20 25       	eor	r18, r0
    12fc:	31 25       	eor	r19, r1
    12fe:	4a 27       	eor	r20, r26
    1300:	58 f7       	brcc	.-42     	; 0x12d8 <sqrt+0x24>
    1302:	66 0f       	add	r22, r22
    1304:	77 1f       	adc	r23, r23
    1306:	88 1f       	adc	r24, r24
    1308:	20 f0       	brcs	.+8      	; 0x1312 <sqrt+0x5e>
    130a:	26 17       	cp	r18, r22
    130c:	37 07       	cpc	r19, r23
    130e:	48 07       	cpc	r20, r24
    1310:	30 f4       	brcc	.+12     	; 0x131e <sqrt+0x6a>
    1312:	62 0b       	sbc	r22, r18
    1314:	73 0b       	sbc	r23, r19
    1316:	84 0b       	sbc	r24, r20
    1318:	20 0d       	add	r18, r0
    131a:	31 1d       	adc	r19, r1
    131c:	41 1d       	adc	r20, r1
    131e:	a0 95       	com	r26
    1320:	81 f7       	brne	.-32     	; 0x1302 <sqrt+0x4e>
    1322:	b9 01       	movw	r22, r18
    1324:	84 2f       	mov	r24, r20
    1326:	91 58       	subi	r25, 0x81	; 129
    1328:	88 0f       	add	r24, r24
    132a:	96 95       	lsr	r25
    132c:	87 95       	ror	r24
    132e:	08 95       	ret

00001330 <__fp_mpack>:
    1330:	9f 3f       	cpi	r25, 0xFF	; 255
    1332:	31 f0       	breq	.+12     	; 0x1340 <__fp_mpack_finite+0xc>

00001334 <__fp_mpack_finite>:
    1334:	91 50       	subi	r25, 0x01	; 1
    1336:	20 f4       	brcc	.+8      	; 0x1340 <__fp_mpack_finite+0xc>
    1338:	87 95       	ror	r24
    133a:	77 95       	ror	r23
    133c:	67 95       	ror	r22
    133e:	b7 95       	ror	r27
    1340:	88 0f       	add	r24, r24
    1342:	91 1d       	adc	r25, r1
    1344:	96 95       	lsr	r25
    1346:	87 95       	ror	r24
    1348:	97 f9       	bld	r25, 7
    134a:	08 95       	ret

0000134c <__fp_norm2>:
    134c:	91 50       	subi	r25, 0x01	; 1
    134e:	50 40       	sbci	r21, 0x00	; 0
    1350:	66 0f       	add	r22, r22
    1352:	77 1f       	adc	r23, r23
    1354:	88 1f       	adc	r24, r24
    1356:	d2 f7       	brpl	.-12     	; 0x134c <__fp_norm2>
    1358:	08 95       	ret

0000135a <dtostrf>:
    135a:	ef 92       	push	r14
    135c:	0f 93       	push	r16
    135e:	1f 93       	push	r17
    1360:	cf 93       	push	r28
    1362:	df 93       	push	r29
    1364:	e8 01       	movw	r28, r16
    1366:	47 ff       	sbrs	r20, 7
    1368:	02 c0       	rjmp	.+4      	; 0x136e <dtostrf+0x14>
    136a:	34 e1       	ldi	r19, 0x14	; 20
    136c:	01 c0       	rjmp	.+2      	; 0x1370 <dtostrf+0x16>
    136e:	34 e0       	ldi	r19, 0x04	; 4
    1370:	e4 2f       	mov	r30, r20
    1372:	ff 27       	eor	r31, r31
    1374:	e7 fd       	sbrc	r30, 7
    1376:	f0 95       	com	r31
    1378:	f7 ff       	sbrs	r31, 7
    137a:	03 c0       	rjmp	.+6      	; 0x1382 <dtostrf+0x28>
    137c:	f1 95       	neg	r31
    137e:	e1 95       	neg	r30
    1380:	f1 09       	sbc	r31, r1
    1382:	e3 2e       	mov	r14, r19
    1384:	02 2f       	mov	r16, r18
    1386:	2e 2f       	mov	r18, r30
    1388:	ae 01       	movw	r20, r28
    138a:	0e 94 ce 09 	call	0x139c	; 0x139c <dtoa_prf>
    138e:	ce 01       	movw	r24, r28
    1390:	df 91       	pop	r29
    1392:	cf 91       	pop	r28
    1394:	1f 91       	pop	r17
    1396:	0f 91       	pop	r16
    1398:	ef 90       	pop	r14
    139a:	08 95       	ret

0000139c <dtoa_prf>:
    139c:	6f 92       	push	r6
    139e:	7f 92       	push	r7
    13a0:	9f 92       	push	r9
    13a2:	af 92       	push	r10
    13a4:	bf 92       	push	r11
    13a6:	cf 92       	push	r12
    13a8:	df 92       	push	r13
    13aa:	ef 92       	push	r14
    13ac:	ff 92       	push	r15
    13ae:	0f 93       	push	r16
    13b0:	1f 93       	push	r17
    13b2:	cf 93       	push	r28
    13b4:	df 93       	push	r29
    13b6:	cd b7       	in	r28, 0x3d	; 61
    13b8:	de b7       	in	r29, 0x3e	; 62
    13ba:	29 97       	sbiw	r28, 0x09	; 9
    13bc:	0f b6       	in	r0, 0x3f	; 63
    13be:	f8 94       	cli
    13c0:	de bf       	out	0x3e, r29	; 62
    13c2:	0f be       	out	0x3f, r0	; 63
    13c4:	cd bf       	out	0x3d, r28	; 61
    13c6:	6a 01       	movw	r12, r20
    13c8:	b2 2e       	mov	r11, r18
    13ca:	10 2f       	mov	r17, r16
    13cc:	0c 33       	cpi	r16, 0x3C	; 60
    13ce:	20 f4       	brcc	.+8      	; 0x13d8 <dtoa_prf+0x3c>
    13d0:	ff 24       	eor	r15, r15
    13d2:	f3 94       	inc	r15
    13d4:	f0 0e       	add	r15, r16
    13d6:	02 c0       	rjmp	.+4      	; 0x13dc <dtoa_prf+0x40>
    13d8:	4c e3       	ldi	r20, 0x3C	; 60
    13da:	f4 2e       	mov	r15, r20
    13dc:	0f 2d       	mov	r16, r15
    13de:	27 e0       	ldi	r18, 0x07	; 7
    13e0:	ae 01       	movw	r20, r28
    13e2:	4f 5f       	subi	r20, 0xFF	; 255
    13e4:	5f 4f       	sbci	r21, 0xFF	; 255
    13e6:	0e 94 4c 0b 	call	0x1698	; 0x1698 <__ftoa_engine>
    13ea:	79 81       	ldd	r23, Y+1	; 0x01
    13ec:	27 2f       	mov	r18, r23
    13ee:	29 70       	andi	r18, 0x09	; 9
    13f0:	21 30       	cpi	r18, 0x01	; 1
    13f2:	31 f0       	breq	.+12     	; 0x1400 <dtoa_prf+0x64>
    13f4:	e1 fc       	sbrc	r14, 1
    13f6:	06 c0       	rjmp	.+12     	; 0x1404 <dtoa_prf+0x68>
    13f8:	e0 fc       	sbrc	r14, 0
    13fa:	06 c0       	rjmp	.+12     	; 0x1408 <dtoa_prf+0x6c>
    13fc:	60 e0       	ldi	r22, 0x00	; 0
    13fe:	05 c0       	rjmp	.+10     	; 0x140a <dtoa_prf+0x6e>
    1400:	6d e2       	ldi	r22, 0x2D	; 45
    1402:	03 c0       	rjmp	.+6      	; 0x140a <dtoa_prf+0x6e>
    1404:	6b e2       	ldi	r22, 0x2B	; 43
    1406:	01 c0       	rjmp	.+2      	; 0x140a <dtoa_prf+0x6e>
    1408:	60 e2       	ldi	r22, 0x20	; 32
    140a:	ae 2d       	mov	r26, r14
    140c:	a0 71       	andi	r26, 0x10	; 16
    140e:	73 ff       	sbrs	r23, 3
    1410:	36 c0       	rjmp	.+108    	; 0x147e <dtoa_prf+0xe2>
    1412:	66 23       	and	r22, r22
    1414:	11 f0       	breq	.+4      	; 0x141a <dtoa_prf+0x7e>
    1416:	84 e0       	ldi	r24, 0x04	; 4
    1418:	01 c0       	rjmp	.+2      	; 0x141c <dtoa_prf+0x80>
    141a:	83 e0       	ldi	r24, 0x03	; 3
    141c:	8b 15       	cp	r24, r11
    141e:	10 f4       	brcc	.+4      	; 0x1424 <dtoa_prf+0x88>
    1420:	b8 1a       	sub	r11, r24
    1422:	01 c0       	rjmp	.+2      	; 0x1426 <dtoa_prf+0x8a>
    1424:	b1 2c       	mov	r11, r1
    1426:	a1 11       	cpse	r26, r1
    1428:	0b c0       	rjmp	.+22     	; 0x1440 <dtoa_prf+0xa4>
    142a:	f6 01       	movw	r30, r12
    142c:	8b 2d       	mov	r24, r11
    142e:	90 e2       	ldi	r25, 0x20	; 32
    1430:	88 23       	and	r24, r24
    1432:	19 f0       	breq	.+6      	; 0x143a <dtoa_prf+0x9e>
    1434:	91 93       	st	Z+, r25
    1436:	81 50       	subi	r24, 0x01	; 1
    1438:	fb cf       	rjmp	.-10     	; 0x1430 <dtoa_prf+0x94>
    143a:	cb 0c       	add	r12, r11
    143c:	d1 1c       	adc	r13, r1
    143e:	b1 2c       	mov	r11, r1
    1440:	66 23       	and	r22, r22
    1442:	31 f0       	breq	.+12     	; 0x1450 <dtoa_prf+0xb4>
    1444:	f6 01       	movw	r30, r12
    1446:	60 83       	st	Z, r22
    1448:	96 01       	movw	r18, r12
    144a:	2f 5f       	subi	r18, 0xFF	; 255
    144c:	3f 4f       	sbci	r19, 0xFF	; 255
    144e:	69 01       	movw	r12, r18
    1450:	c6 01       	movw	r24, r12
    1452:	03 96       	adiw	r24, 0x03	; 3
    1454:	e2 fe       	sbrs	r14, 2
    1456:	05 c0       	rjmp	.+10     	; 0x1462 <dtoa_prf+0xc6>
    1458:	2e e4       	ldi	r18, 0x4E	; 78
    145a:	f6 01       	movw	r30, r12
    145c:	20 83       	st	Z, r18
    145e:	31 e4       	ldi	r19, 0x41	; 65
    1460:	04 c0       	rjmp	.+8      	; 0x146a <dtoa_prf+0xce>
    1462:	2e e6       	ldi	r18, 0x6E	; 110
    1464:	f6 01       	movw	r30, r12
    1466:	20 83       	st	Z, r18
    1468:	31 e6       	ldi	r19, 0x61	; 97
    146a:	31 83       	std	Z+1, r19	; 0x01
    146c:	22 83       	std	Z+2, r18	; 0x02
    146e:	fc 01       	movw	r30, r24
    1470:	2b 2d       	mov	r18, r11
    1472:	30 e2       	ldi	r19, 0x20	; 32
    1474:	22 23       	and	r18, r18
    1476:	f1 f1       	breq	.+124    	; 0x14f4 <dtoa_prf+0x158>
    1478:	31 93       	st	Z+, r19
    147a:	21 50       	subi	r18, 0x01	; 1
    147c:	fb cf       	rjmp	.-10     	; 0x1474 <dtoa_prf+0xd8>
    147e:	72 ff       	sbrs	r23, 2
    1480:	40 c0       	rjmp	.+128    	; 0x1502 <dtoa_prf+0x166>
    1482:	66 23       	and	r22, r22
    1484:	11 f0       	breq	.+4      	; 0x148a <dtoa_prf+0xee>
    1486:	84 e0       	ldi	r24, 0x04	; 4
    1488:	01 c0       	rjmp	.+2      	; 0x148c <dtoa_prf+0xf0>
    148a:	83 e0       	ldi	r24, 0x03	; 3
    148c:	8b 15       	cp	r24, r11
    148e:	10 f4       	brcc	.+4      	; 0x1494 <dtoa_prf+0xf8>
    1490:	b8 1a       	sub	r11, r24
    1492:	01 c0       	rjmp	.+2      	; 0x1496 <dtoa_prf+0xfa>
    1494:	b1 2c       	mov	r11, r1
    1496:	a1 11       	cpse	r26, r1
    1498:	0b c0       	rjmp	.+22     	; 0x14b0 <dtoa_prf+0x114>
    149a:	f6 01       	movw	r30, r12
    149c:	8b 2d       	mov	r24, r11
    149e:	90 e2       	ldi	r25, 0x20	; 32
    14a0:	88 23       	and	r24, r24
    14a2:	19 f0       	breq	.+6      	; 0x14aa <dtoa_prf+0x10e>
    14a4:	91 93       	st	Z+, r25
    14a6:	81 50       	subi	r24, 0x01	; 1
    14a8:	fb cf       	rjmp	.-10     	; 0x14a0 <dtoa_prf+0x104>
    14aa:	cb 0c       	add	r12, r11
    14ac:	d1 1c       	adc	r13, r1
    14ae:	b1 2c       	mov	r11, r1
    14b0:	66 23       	and	r22, r22
    14b2:	31 f0       	breq	.+12     	; 0x14c0 <dtoa_prf+0x124>
    14b4:	f6 01       	movw	r30, r12
    14b6:	60 83       	st	Z, r22
    14b8:	96 01       	movw	r18, r12
    14ba:	2f 5f       	subi	r18, 0xFF	; 255
    14bc:	3f 4f       	sbci	r19, 0xFF	; 255
    14be:	69 01       	movw	r12, r18
    14c0:	c6 01       	movw	r24, r12
    14c2:	03 96       	adiw	r24, 0x03	; 3
    14c4:	e2 fe       	sbrs	r14, 2
    14c6:	07 c0       	rjmp	.+14     	; 0x14d6 <dtoa_prf+0x13a>
    14c8:	29 e4       	ldi	r18, 0x49	; 73
    14ca:	f6 01       	movw	r30, r12
    14cc:	20 83       	st	Z, r18
    14ce:	2e e4       	ldi	r18, 0x4E	; 78
    14d0:	21 83       	std	Z+1, r18	; 0x01
    14d2:	26 e4       	ldi	r18, 0x46	; 70
    14d4:	06 c0       	rjmp	.+12     	; 0x14e2 <dtoa_prf+0x146>
    14d6:	29 e6       	ldi	r18, 0x69	; 105
    14d8:	f6 01       	movw	r30, r12
    14da:	20 83       	st	Z, r18
    14dc:	2e e6       	ldi	r18, 0x6E	; 110
    14de:	21 83       	std	Z+1, r18	; 0x01
    14e0:	26 e6       	ldi	r18, 0x66	; 102
    14e2:	22 83       	std	Z+2, r18	; 0x02
    14e4:	fc 01       	movw	r30, r24
    14e6:	2b 2d       	mov	r18, r11
    14e8:	30 e2       	ldi	r19, 0x20	; 32
    14ea:	22 23       	and	r18, r18
    14ec:	19 f0       	breq	.+6      	; 0x14f4 <dtoa_prf+0x158>
    14ee:	31 93       	st	Z+, r19
    14f0:	21 50       	subi	r18, 0x01	; 1
    14f2:	fb cf       	rjmp	.-10     	; 0x14ea <dtoa_prf+0x14e>
    14f4:	fc 01       	movw	r30, r24
    14f6:	eb 0d       	add	r30, r11
    14f8:	f1 1d       	adc	r31, r1
    14fa:	10 82       	st	Z, r1
    14fc:	8e ef       	ldi	r24, 0xFE	; 254
    14fe:	9f ef       	ldi	r25, 0xFF	; 255
    1500:	b7 c0       	rjmp	.+366    	; 0x1670 <dtoa_prf+0x2d4>
    1502:	b1 e0       	ldi	r27, 0x01	; 1
    1504:	61 11       	cpse	r22, r1
    1506:	01 c0       	rjmp	.+2      	; 0x150a <dtoa_prf+0x16e>
    1508:	b0 e0       	ldi	r27, 0x00	; 0
    150a:	4b 2f       	mov	r20, r27
    150c:	50 e0       	ldi	r21, 0x00	; 0
    150e:	18 16       	cp	r1, r24
    1510:	19 06       	cpc	r1, r25
    1512:	24 f4       	brge	.+8      	; 0x151c <dtoa_prf+0x180>
    1514:	9c 01       	movw	r18, r24
    1516:	2f 5f       	subi	r18, 0xFF	; 255
    1518:	3f 4f       	sbci	r19, 0xFF	; 255
    151a:	02 c0       	rjmp	.+4      	; 0x1520 <dtoa_prf+0x184>
    151c:	21 e0       	ldi	r18, 0x01	; 1
    151e:	30 e0       	ldi	r19, 0x00	; 0
    1520:	24 0f       	add	r18, r20
    1522:	35 1f       	adc	r19, r21
    1524:	11 23       	and	r17, r17
    1526:	29 f0       	breq	.+10     	; 0x1532 <dtoa_prf+0x196>
    1528:	41 2f       	mov	r20, r17
    152a:	50 e0       	ldi	r21, 0x00	; 0
    152c:	4f 5f       	subi	r20, 0xFF	; 255
    152e:	5f 4f       	sbci	r21, 0xFF	; 255
    1530:	02 c0       	rjmp	.+4      	; 0x1536 <dtoa_prf+0x19a>
    1532:	40 e0       	ldi	r20, 0x00	; 0
    1534:	50 e0       	ldi	r21, 0x00	; 0
    1536:	42 0f       	add	r20, r18
    1538:	53 1f       	adc	r21, r19
    153a:	2b 2d       	mov	r18, r11
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	42 17       	cp	r20, r18
    1540:	53 07       	cpc	r21, r19
    1542:	14 f4       	brge	.+4      	; 0x1548 <dtoa_prf+0x1ac>
    1544:	b4 1a       	sub	r11, r20
    1546:	01 c0       	rjmp	.+2      	; 0x154a <dtoa_prf+0x1ae>
    1548:	b1 2c       	mov	r11, r1
    154a:	2e 2d       	mov	r18, r14
    154c:	28 71       	andi	r18, 0x18	; 24
    154e:	59 f4       	brne	.+22     	; 0x1566 <dtoa_prf+0x1ca>
    1550:	f6 01       	movw	r30, r12
    1552:	2b 2d       	mov	r18, r11
    1554:	30 e2       	ldi	r19, 0x20	; 32
    1556:	22 23       	and	r18, r18
    1558:	19 f0       	breq	.+6      	; 0x1560 <dtoa_prf+0x1c4>
    155a:	31 93       	st	Z+, r19
    155c:	21 50       	subi	r18, 0x01	; 1
    155e:	fb cf       	rjmp	.-10     	; 0x1556 <dtoa_prf+0x1ba>
    1560:	cb 0c       	add	r12, r11
    1562:	d1 1c       	adc	r13, r1
    1564:	b1 2c       	mov	r11, r1
    1566:	bb 23       	and	r27, r27
    1568:	31 f0       	breq	.+12     	; 0x1576 <dtoa_prf+0x1da>
    156a:	f6 01       	movw	r30, r12
    156c:	60 83       	st	Z, r22
    156e:	96 01       	movw	r18, r12
    1570:	2f 5f       	subi	r18, 0xFF	; 255
    1572:	3f 4f       	sbci	r19, 0xFF	; 255
    1574:	69 01       	movw	r12, r18
    1576:	a1 11       	cpse	r26, r1
    1578:	0b c0       	rjmp	.+22     	; 0x1590 <dtoa_prf+0x1f4>
    157a:	f6 01       	movw	r30, r12
    157c:	2b 2d       	mov	r18, r11
    157e:	30 e3       	ldi	r19, 0x30	; 48
    1580:	22 23       	and	r18, r18
    1582:	19 f0       	breq	.+6      	; 0x158a <dtoa_prf+0x1ee>
    1584:	31 93       	st	Z+, r19
    1586:	21 50       	subi	r18, 0x01	; 1
    1588:	fb cf       	rjmp	.-10     	; 0x1580 <dtoa_prf+0x1e4>
    158a:	cb 0c       	add	r12, r11
    158c:	d1 1c       	adc	r13, r1
    158e:	b1 2c       	mov	r11, r1
    1590:	f8 0e       	add	r15, r24
    1592:	0a 81       	ldd	r16, Y+2	; 0x02
    1594:	37 2f       	mov	r19, r23
    1596:	30 71       	andi	r19, 0x10	; 16
    1598:	a3 2e       	mov	r10, r19
    159a:	74 ff       	sbrs	r23, 4
    159c:	03 c0       	rjmp	.+6      	; 0x15a4 <dtoa_prf+0x208>
    159e:	01 33       	cpi	r16, 0x31	; 49
    15a0:	09 f4       	brne	.+2      	; 0x15a4 <dtoa_prf+0x208>
    15a2:	fa 94       	dec	r15
    15a4:	1f 14       	cp	r1, r15
    15a6:	2c f4       	brge	.+10     	; 0x15b2 <dtoa_prf+0x216>
    15a8:	2f 2d       	mov	r18, r15
    15aa:	29 30       	cpi	r18, 0x09	; 9
    15ac:	18 f0       	brcs	.+6      	; 0x15b4 <dtoa_prf+0x218>
    15ae:	28 e0       	ldi	r18, 0x08	; 8
    15b0:	01 c0       	rjmp	.+2      	; 0x15b4 <dtoa_prf+0x218>
    15b2:	21 e0       	ldi	r18, 0x01	; 1
    15b4:	68 2f       	mov	r22, r24
    15b6:	39 2f       	mov	r19, r25
    15b8:	97 ff       	sbrs	r25, 7
    15ba:	02 c0       	rjmp	.+4      	; 0x15c0 <dtoa_prf+0x224>
    15bc:	60 e0       	ldi	r22, 0x00	; 0
    15be:	30 e0       	ldi	r19, 0x00	; 0
    15c0:	46 2f       	mov	r20, r22
    15c2:	53 2f       	mov	r21, r19
    15c4:	61 2c       	mov	r6, r1
    15c6:	71 2c       	mov	r7, r1
    15c8:	3e e2       	ldi	r19, 0x2E	; 46
    15ca:	93 2e       	mov	r9, r19
    15cc:	bc 01       	movw	r22, r24
    15ce:	62 1b       	sub	r22, r18
    15d0:	71 09       	sbc	r23, r1
    15d2:	9b 01       	movw	r18, r22
    15d4:	dc 01       	movw	r26, r24
    15d6:	a4 1b       	sub	r26, r20
    15d8:	b5 0b       	sbc	r27, r21
    15da:	e1 e0       	ldi	r30, 0x01	; 1
    15dc:	f0 e0       	ldi	r31, 0x00	; 0
    15de:	ec 0f       	add	r30, r28
    15e0:	fd 1f       	adc	r31, r29
    15e2:	ae 0f       	add	r26, r30
    15e4:	bf 1f       	adc	r27, r31
    15e6:	e1 2e       	mov	r14, r17
    15e8:	f1 2c       	mov	r15, r1
    15ea:	f1 94       	neg	r15
    15ec:	e1 94       	neg	r14
    15ee:	f1 08       	sbc	r15, r1
    15f0:	4f 3f       	cpi	r20, 0xFF	; 255
    15f2:	ff ef       	ldi	r31, 0xFF	; 255
    15f4:	5f 07       	cpc	r21, r31
    15f6:	31 f4       	brne	.+12     	; 0x1604 <dtoa_prf+0x268>
    15f8:	f6 01       	movw	r30, r12
    15fa:	90 82       	st	Z, r9
    15fc:	b6 01       	movw	r22, r12
    15fe:	6f 5f       	subi	r22, 0xFF	; 255
    1600:	7f 4f       	sbci	r23, 0xFF	; 255
    1602:	6b 01       	movw	r12, r22
    1604:	84 17       	cp	r24, r20
    1606:	95 07       	cpc	r25, r21
    1608:	4c f0       	brlt	.+18     	; 0x161c <dtoa_prf+0x280>
    160a:	24 17       	cp	r18, r20
    160c:	35 07       	cpc	r19, r21
    160e:	34 f4       	brge	.+12     	; 0x161c <dtoa_prf+0x280>
    1610:	bd 01       	movw	r22, r26
    1612:	66 0d       	add	r22, r6
    1614:	77 1d       	adc	r23, r7
    1616:	fb 01       	movw	r30, r22
    1618:	11 81       	ldd	r17, Z+1	; 0x01
    161a:	01 c0       	rjmp	.+2      	; 0x161e <dtoa_prf+0x282>
    161c:	10 e3       	ldi	r17, 0x30	; 48
    161e:	41 50       	subi	r20, 0x01	; 1
    1620:	51 09       	sbc	r21, r1
    1622:	ff ef       	ldi	r31, 0xFF	; 255
    1624:	6f 1a       	sub	r6, r31
    1626:	7f 0a       	sbc	r7, r31
    1628:	b6 01       	movw	r22, r12
    162a:	6f 5f       	subi	r22, 0xFF	; 255
    162c:	7f 4f       	sbci	r23, 0xFF	; 255
    162e:	4e 15       	cp	r20, r14
    1630:	5f 05       	cpc	r21, r15
    1632:	24 f0       	brlt	.+8      	; 0x163c <dtoa_prf+0x2a0>
    1634:	f6 01       	movw	r30, r12
    1636:	10 83       	st	Z, r17
    1638:	6b 01       	movw	r12, r22
    163a:	da cf       	rjmp	.-76     	; 0x15f0 <dtoa_prf+0x254>
    163c:	48 17       	cp	r20, r24
    163e:	59 07       	cpc	r21, r25
    1640:	39 f4       	brne	.+14     	; 0x1650 <dtoa_prf+0x2b4>
    1642:	06 33       	cpi	r16, 0x36	; 54
    1644:	20 f4       	brcc	.+8      	; 0x164e <dtoa_prf+0x2b2>
    1646:	05 33       	cpi	r16, 0x35	; 53
    1648:	19 f4       	brne	.+6      	; 0x1650 <dtoa_prf+0x2b4>
    164a:	a1 10       	cpse	r10, r1
    164c:	01 c0       	rjmp	.+2      	; 0x1650 <dtoa_prf+0x2b4>
    164e:	11 e3       	ldi	r17, 0x31	; 49
    1650:	f6 01       	movw	r30, r12
    1652:	10 83       	st	Z, r17
    1654:	fb 01       	movw	r30, r22
    1656:	8b 2d       	mov	r24, r11
    1658:	90 e2       	ldi	r25, 0x20	; 32
    165a:	88 23       	and	r24, r24
    165c:	19 f0       	breq	.+6      	; 0x1664 <dtoa_prf+0x2c8>
    165e:	91 93       	st	Z+, r25
    1660:	81 50       	subi	r24, 0x01	; 1
    1662:	fb cf       	rjmp	.-10     	; 0x165a <dtoa_prf+0x2be>
    1664:	fb 01       	movw	r30, r22
    1666:	eb 0d       	add	r30, r11
    1668:	f1 1d       	adc	r31, r1
    166a:	10 82       	st	Z, r1
    166c:	80 e0       	ldi	r24, 0x00	; 0
    166e:	90 e0       	ldi	r25, 0x00	; 0
    1670:	29 96       	adiw	r28, 0x09	; 9
    1672:	0f b6       	in	r0, 0x3f	; 63
    1674:	f8 94       	cli
    1676:	de bf       	out	0x3e, r29	; 62
    1678:	0f be       	out	0x3f, r0	; 63
    167a:	cd bf       	out	0x3d, r28	; 61
    167c:	df 91       	pop	r29
    167e:	cf 91       	pop	r28
    1680:	1f 91       	pop	r17
    1682:	0f 91       	pop	r16
    1684:	ff 90       	pop	r15
    1686:	ef 90       	pop	r14
    1688:	df 90       	pop	r13
    168a:	cf 90       	pop	r12
    168c:	bf 90       	pop	r11
    168e:	af 90       	pop	r10
    1690:	9f 90       	pop	r9
    1692:	7f 90       	pop	r7
    1694:	6f 90       	pop	r6
    1696:	08 95       	ret

00001698 <__ftoa_engine>:
    1698:	28 30       	cpi	r18, 0x08	; 8
    169a:	08 f0       	brcs	.+2      	; 0x169e <__ftoa_engine+0x6>
    169c:	27 e0       	ldi	r18, 0x07	; 7
    169e:	33 27       	eor	r19, r19
    16a0:	da 01       	movw	r26, r20
    16a2:	99 0f       	add	r25, r25
    16a4:	31 1d       	adc	r19, r1
    16a6:	87 fd       	sbrc	r24, 7
    16a8:	91 60       	ori	r25, 0x01	; 1
    16aa:	00 96       	adiw	r24, 0x00	; 0
    16ac:	61 05       	cpc	r22, r1
    16ae:	71 05       	cpc	r23, r1
    16b0:	39 f4       	brne	.+14     	; 0x16c0 <__ftoa_engine+0x28>
    16b2:	32 60       	ori	r19, 0x02	; 2
    16b4:	2e 5f       	subi	r18, 0xFE	; 254
    16b6:	3d 93       	st	X+, r19
    16b8:	30 e3       	ldi	r19, 0x30	; 48
    16ba:	2a 95       	dec	r18
    16bc:	e1 f7       	brne	.-8      	; 0x16b6 <__ftoa_engine+0x1e>
    16be:	08 95       	ret
    16c0:	9f 3f       	cpi	r25, 0xFF	; 255
    16c2:	30 f0       	brcs	.+12     	; 0x16d0 <__ftoa_engine+0x38>
    16c4:	80 38       	cpi	r24, 0x80	; 128
    16c6:	71 05       	cpc	r23, r1
    16c8:	61 05       	cpc	r22, r1
    16ca:	09 f0       	breq	.+2      	; 0x16ce <__ftoa_engine+0x36>
    16cc:	3c 5f       	subi	r19, 0xFC	; 252
    16ce:	3c 5f       	subi	r19, 0xFC	; 252
    16d0:	3d 93       	st	X+, r19
    16d2:	91 30       	cpi	r25, 0x01	; 1
    16d4:	08 f0       	brcs	.+2      	; 0x16d8 <__ftoa_engine+0x40>
    16d6:	80 68       	ori	r24, 0x80	; 128
    16d8:	91 1d       	adc	r25, r1
    16da:	df 93       	push	r29
    16dc:	cf 93       	push	r28
    16de:	1f 93       	push	r17
    16e0:	0f 93       	push	r16
    16e2:	ff 92       	push	r15
    16e4:	ef 92       	push	r14
    16e6:	19 2f       	mov	r17, r25
    16e8:	98 7f       	andi	r25, 0xF8	; 248
    16ea:	96 95       	lsr	r25
    16ec:	e9 2f       	mov	r30, r25
    16ee:	96 95       	lsr	r25
    16f0:	96 95       	lsr	r25
    16f2:	e9 0f       	add	r30, r25
    16f4:	ff 27       	eor	r31, r31
    16f6:	e2 55       	subi	r30, 0x52	; 82
    16f8:	ff 4f       	sbci	r31, 0xFF	; 255
    16fa:	99 27       	eor	r25, r25
    16fc:	33 27       	eor	r19, r19
    16fe:	ee 24       	eor	r14, r14
    1700:	ff 24       	eor	r15, r15
    1702:	a7 01       	movw	r20, r14
    1704:	e7 01       	movw	r28, r14
    1706:	05 90       	lpm	r0, Z+
    1708:	08 94       	sec
    170a:	07 94       	ror	r0
    170c:	28 f4       	brcc	.+10     	; 0x1718 <__ftoa_engine+0x80>
    170e:	36 0f       	add	r19, r22
    1710:	e7 1e       	adc	r14, r23
    1712:	f8 1e       	adc	r15, r24
    1714:	49 1f       	adc	r20, r25
    1716:	51 1d       	adc	r21, r1
    1718:	66 0f       	add	r22, r22
    171a:	77 1f       	adc	r23, r23
    171c:	88 1f       	adc	r24, r24
    171e:	99 1f       	adc	r25, r25
    1720:	06 94       	lsr	r0
    1722:	a1 f7       	brne	.-24     	; 0x170c <__ftoa_engine+0x74>
    1724:	05 90       	lpm	r0, Z+
    1726:	07 94       	ror	r0
    1728:	28 f4       	brcc	.+10     	; 0x1734 <__ftoa_engine+0x9c>
    172a:	e7 0e       	add	r14, r23
    172c:	f8 1e       	adc	r15, r24
    172e:	49 1f       	adc	r20, r25
    1730:	56 1f       	adc	r21, r22
    1732:	c1 1d       	adc	r28, r1
    1734:	77 0f       	add	r23, r23
    1736:	88 1f       	adc	r24, r24
    1738:	99 1f       	adc	r25, r25
    173a:	66 1f       	adc	r22, r22
    173c:	06 94       	lsr	r0
    173e:	a1 f7       	brne	.-24     	; 0x1728 <__ftoa_engine+0x90>
    1740:	05 90       	lpm	r0, Z+
    1742:	07 94       	ror	r0
    1744:	28 f4       	brcc	.+10     	; 0x1750 <__ftoa_engine+0xb8>
    1746:	f8 0e       	add	r15, r24
    1748:	49 1f       	adc	r20, r25
    174a:	56 1f       	adc	r21, r22
    174c:	c7 1f       	adc	r28, r23
    174e:	d1 1d       	adc	r29, r1
    1750:	88 0f       	add	r24, r24
    1752:	99 1f       	adc	r25, r25
    1754:	66 1f       	adc	r22, r22
    1756:	77 1f       	adc	r23, r23
    1758:	06 94       	lsr	r0
    175a:	a1 f7       	brne	.-24     	; 0x1744 <__ftoa_engine+0xac>
    175c:	05 90       	lpm	r0, Z+
    175e:	07 94       	ror	r0
    1760:	20 f4       	brcc	.+8      	; 0x176a <__ftoa_engine+0xd2>
    1762:	49 0f       	add	r20, r25
    1764:	56 1f       	adc	r21, r22
    1766:	c7 1f       	adc	r28, r23
    1768:	d8 1f       	adc	r29, r24
    176a:	99 0f       	add	r25, r25
    176c:	66 1f       	adc	r22, r22
    176e:	77 1f       	adc	r23, r23
    1770:	88 1f       	adc	r24, r24
    1772:	06 94       	lsr	r0
    1774:	a9 f7       	brne	.-22     	; 0x1760 <__ftoa_engine+0xc8>
    1776:	84 91       	lpm	r24, Z
    1778:	10 95       	com	r17
    177a:	17 70       	andi	r17, 0x07	; 7
    177c:	41 f0       	breq	.+16     	; 0x178e <__ftoa_engine+0xf6>
    177e:	d6 95       	lsr	r29
    1780:	c7 95       	ror	r28
    1782:	57 95       	ror	r21
    1784:	47 95       	ror	r20
    1786:	f7 94       	ror	r15
    1788:	e7 94       	ror	r14
    178a:	1a 95       	dec	r17
    178c:	c1 f7       	brne	.-16     	; 0x177e <__ftoa_engine+0xe6>
    178e:	e4 e5       	ldi	r30, 0x54	; 84
    1790:	f0 e0       	ldi	r31, 0x00	; 0
    1792:	68 94       	set
    1794:	15 90       	lpm	r1, Z+
    1796:	15 91       	lpm	r17, Z+
    1798:	35 91       	lpm	r19, Z+
    179a:	65 91       	lpm	r22, Z+
    179c:	95 91       	lpm	r25, Z+
    179e:	05 90       	lpm	r0, Z+
    17a0:	7f e2       	ldi	r23, 0x2F	; 47
    17a2:	73 95       	inc	r23
    17a4:	e1 18       	sub	r14, r1
    17a6:	f1 0a       	sbc	r15, r17
    17a8:	43 0b       	sbc	r20, r19
    17aa:	56 0b       	sbc	r21, r22
    17ac:	c9 0b       	sbc	r28, r25
    17ae:	d0 09       	sbc	r29, r0
    17b0:	c0 f7       	brcc	.-16     	; 0x17a2 <__ftoa_engine+0x10a>
    17b2:	e1 0c       	add	r14, r1
    17b4:	f1 1e       	adc	r15, r17
    17b6:	43 1f       	adc	r20, r19
    17b8:	56 1f       	adc	r21, r22
    17ba:	c9 1f       	adc	r28, r25
    17bc:	d0 1d       	adc	r29, r0
    17be:	7e f4       	brtc	.+30     	; 0x17de <__ftoa_engine+0x146>
    17c0:	70 33       	cpi	r23, 0x30	; 48
    17c2:	11 f4       	brne	.+4      	; 0x17c8 <__ftoa_engine+0x130>
    17c4:	8a 95       	dec	r24
    17c6:	e6 cf       	rjmp	.-52     	; 0x1794 <__ftoa_engine+0xfc>
    17c8:	e8 94       	clt
    17ca:	01 50       	subi	r16, 0x01	; 1
    17cc:	30 f0       	brcs	.+12     	; 0x17da <__ftoa_engine+0x142>
    17ce:	08 0f       	add	r16, r24
    17d0:	0a f4       	brpl	.+2      	; 0x17d4 <__ftoa_engine+0x13c>
    17d2:	00 27       	eor	r16, r16
    17d4:	02 17       	cp	r16, r18
    17d6:	08 f4       	brcc	.+2      	; 0x17da <__ftoa_engine+0x142>
    17d8:	20 2f       	mov	r18, r16
    17da:	23 95       	inc	r18
    17dc:	02 2f       	mov	r16, r18
    17de:	7a 33       	cpi	r23, 0x3A	; 58
    17e0:	28 f0       	brcs	.+10     	; 0x17ec <__ftoa_engine+0x154>
    17e2:	79 e3       	ldi	r23, 0x39	; 57
    17e4:	7d 93       	st	X+, r23
    17e6:	2a 95       	dec	r18
    17e8:	e9 f7       	brne	.-6      	; 0x17e4 <__ftoa_engine+0x14c>
    17ea:	10 c0       	rjmp	.+32     	; 0x180c <__ftoa_engine+0x174>
    17ec:	7d 93       	st	X+, r23
    17ee:	2a 95       	dec	r18
    17f0:	89 f6       	brne	.-94     	; 0x1794 <__ftoa_engine+0xfc>
    17f2:	06 94       	lsr	r0
    17f4:	97 95       	ror	r25
    17f6:	67 95       	ror	r22
    17f8:	37 95       	ror	r19
    17fa:	17 95       	ror	r17
    17fc:	17 94       	ror	r1
    17fe:	e1 18       	sub	r14, r1
    1800:	f1 0a       	sbc	r15, r17
    1802:	43 0b       	sbc	r20, r19
    1804:	56 0b       	sbc	r21, r22
    1806:	c9 0b       	sbc	r28, r25
    1808:	d0 09       	sbc	r29, r0
    180a:	98 f0       	brcs	.+38     	; 0x1832 <__ftoa_engine+0x19a>
    180c:	23 95       	inc	r18
    180e:	7e 91       	ld	r23, -X
    1810:	73 95       	inc	r23
    1812:	7a 33       	cpi	r23, 0x3A	; 58
    1814:	08 f0       	brcs	.+2      	; 0x1818 <__ftoa_engine+0x180>
    1816:	70 e3       	ldi	r23, 0x30	; 48
    1818:	7c 93       	st	X, r23
    181a:	20 13       	cpse	r18, r16
    181c:	b8 f7       	brcc	.-18     	; 0x180c <__ftoa_engine+0x174>
    181e:	7e 91       	ld	r23, -X
    1820:	70 61       	ori	r23, 0x10	; 16
    1822:	7d 93       	st	X+, r23
    1824:	30 f0       	brcs	.+12     	; 0x1832 <__ftoa_engine+0x19a>
    1826:	83 95       	inc	r24
    1828:	71 e3       	ldi	r23, 0x31	; 49
    182a:	7d 93       	st	X+, r23
    182c:	70 e3       	ldi	r23, 0x30	; 48
    182e:	2a 95       	dec	r18
    1830:	e1 f7       	brne	.-8      	; 0x182a <__ftoa_engine+0x192>
    1832:	11 24       	eor	r1, r1
    1834:	ef 90       	pop	r14
    1836:	ff 90       	pop	r15
    1838:	0f 91       	pop	r16
    183a:	1f 91       	pop	r17
    183c:	cf 91       	pop	r28
    183e:	df 91       	pop	r29
    1840:	99 27       	eor	r25, r25
    1842:	87 fd       	sbrc	r24, 7
    1844:	90 95       	com	r25
    1846:	08 95       	ret

00001848 <_exit>:
    1848:	f8 94       	cli

0000184a <__stop_program>:
    184a:	ff cf       	rjmp	.-2      	; 0x184a <__stop_program>
